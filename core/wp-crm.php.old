<?php
/*
Plugin Name: WP Ticket CRM
Plugin URI: http://www.ublo.ro
Description: Extends WP_CRM
Author: Bogdan Dobrica
Version: 0.1
Author URI: http://www.ublo.ro
*/

/* settings */
define (WPSHOP_PRICE, 'shop_price');
define (WPSHOP_VAT, 'shop_vat');
define (WPSHOP_DISCOUNT, 'shop_discount');
define (WPSHOP_FULLDETAILS, 'shop_fulldetails');
define (WPSHOP_KEEPER, 'shop_keeper');
define (WPSHOP_COOKIE, 'shop_cookie');
define (WPSHOP_COMPANY, 'shop_company');
define (WPSHOP_BUYBUTTON, '<!-- buy -->');
define (WPSHOP_VAT_0, '<sup>1</sup> Scutit de TVA Cf. ART. 141 alin. (1) lit. (f), Codul Fiscal 2010/ TITLUL VI/ CAP. IX');
define (WPSHOP_PAYMENT_CONFIRM, '<!-- payment-confirm -->');
define (WPSHOP_PAYMENT_ERROR, '<!-- payment-error -->');
define (WPSHOP_OLD_CUSTOMER, TRUE);
define (WPSHOP_MIN_DISCOUNT, 400);
define (WPSHOP_U_DISCOUNT, 100);
define (WPSHOP_UPDATE_QUANTITY, FALSE);
define (WPSHOP_CURRENCY, 'lei');
define (WPSHOP_INVOICE_SERIES, 'XTI'); 

define (WP_CRM_Shop_Cookie, 'WP_CRM_SHOP_COOKIE');
define (WP_CRM_Track_Cookie, 'WP_CRM_TRACK_COOKIE');

global $visitor;

include (dirname(__FILE__).'/libs/class.crm.php');
include (dirname(__FILE__).'/libs/fpdf.php');
include (dirname(__FILE__).'/libs/class.pdf.php');
include (dirname(__FILE__).'/libs/gpwd.php');

#function __autoload ($class) {
#	include (dirname(__FILE__).'/libs/class.'.$class.'.php');
#	}

function wp_crm_cookie () {
	global $wpdb, $visitor;
	if (!isset($_COOKIE[WP_CRM_Track_Cookie])) {
		setcookie (WP_CRM_Track_Cookie, $_SERVER['HTTP_REFERER'], 0, '/', '.traininguri.ro', FALSE, TRUE);
		$_COOKIE[WP_CRM_Track_Cookie] = $_SERVER['HTTP_REFERER'];
		}

#	if ($_GET['state'] && $_GET['code']) {
#		$token_url = 'https://graph.facebook.com/oauth/access_token?client_id=&redirect_uri=YOUR_REDIRECT_URI&client_secret=YOUR_APP_SECRET&code=CODE_GENERATED_BY_FACEBOOK';
#		}

	if ($_POST['a'] == 'pay') {
		if (!isset($_COOKIE[WP_CRM_Shop_Cookie])) {
			$sql = $wpdb->prepare('insert into `'.$wpdb->prefix.'visitors` (id) values (null);');
			$wpdb->query ($sql);
			$sql = $wpdb->prepare('select last_insert_id();');
			$visitor = $wpdb->get_var($sql);
			setcookie (WP_CRM_Shop_Cookie, $visitor, time()+31536000, '/', '.traininguri.ro', FALSE, TRUE);
			}
		else
			$visitor = $_COOKIE[WP_CRM_Shop_Cookie];
		}

	session_start();
	if ($_GET['mobilpay'] == 'test') $_SESSION['WP_CRM_TEST_MOBILPAY'] = 1;
	}

function wp_crm_date ($date) {
	return str_replace ( array (
			'january',
			'february',
			'march',
			'april',
			'may',
			'june',
			'july',
			'august',
			'september',
			'october',
			'november',
			'december',
		), array (
			'ianuarie',
			'februarie',
			'martie',
			'aprilie',
			'mai',
			'iunie',
			'iulie',
			'august',
			'septembrie',
			'octombrie',
			'noiembrie',
			'decembrie',
		), strtolower ($date));
	}

function wp_crm_editor ($content, $editor_id, $settings = array (), $echo = TRUE) {
	if (!$echo) {
		ob_start();
		wp_editor ($content, $editor_id, $settings);
		$out = ob_get_contents();
		ob_end_clean();
		return $out;
		}
	else
		wp_editor ($content, $editor_id, $settings);
	}

function wp_crm_template ($data, $object, $role) {
	if (!is_object($object)) return $data;
	switch (get_class($object)) {
		case 'WP_CRM_Person':
		case 'WP_CRM_Company':
		case 'WP_CRM_Buyer':
		case 'WP_CRM_Invoice':
		case 'WP_CRM_Product':
			$keys = $object->get('keys');
			if (!empty($keys))
				foreach ($keys as $key) {
					$value = $object->get($key);
					if (is_object($value)) continue;
					$data = str_replace ('{'.$role.'.'.str_replace(' ','_',$key).'}', $value, $data);
					}
			break;
		}
	return $data;
	}

function wp_crm_display_table ($cols, $rows, $table_args = array(), $echo = FALSE) {
	$out = '';
	$header = TRUE;
	$footer = TRUE;
	if (empty($table_args)) $table_args = array ('class' => 'widefat');
	if (strpos($table_args['class'], 'noheader') !== FALSE) {
		$table_args['class'] = str_replace ('noheader', '', $table_args['class']);
		$header = FALSE;
		}
	if (strpos($table_args['class'], 'nofooter') !== FALSE) {
		$table_args['class'] = str_replace ('nofooter', '', $table_args['class']);
		$footer = FALSE;
		}

	$args = array();
	foreach ($table_args as $key => $val) $args[] = $key.'="'.$val.'"';

	$out .= '<table'.(empty($args) ? '' : (' '.implode(' ',$args))).'>';
	if ($header && !empty($cols)) $out .= '<thead><tr><th>'.implode('</th><th>', $cols).'</th></tr></thead>';

	$out .= '<tbody>';
	$maxrows = 0;
	foreach ($rows as $row) {
		$maxrows = count($row) > $maxrows ? count($row) : $maxrows;
		$out .= '<tr><td'.(count($row) < $maxrows ? ' align="center" colspan="'.($maxrows + 1 - count($row)).'"' : '').'>'.implode('</td><td>', $row).'</td></tr>';
		}
	$out .= '</tbody>';

	if ($footer && !empty($cols)) $out .= '<tfoot><tr><th>'.implode('</th><th>', $cols).'</th></tr></tfoot>';
	$out .= '</table>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_display_invoice ($invoice, $receipt = false, $echo = false) {
	$company = $invoice->get('company');
	$buyer = $invoice->get('buyer');
	$basket = $invoice->get('products');

	$products = array ();
	$value = 0;
	$vat = 0;
	$c = 1;
	foreach ($basket as $ID => $item) {
		$products[] = array (
			$c++,
			$item['product']->get('name'),
			'buc',
			$item['quantity'],
			$item['product']->get('price'),
			$item['product']->get('price')*(100+$item['product']->get('vat'))/100,
			$item['product']->get('price')*$item['product']->get('vat')/100,
			);
		$value += $item['product']->get('price');
		$vat += $item['product']->get('price')*$item['product']->get('vat')/100;
		}

	
	
	$out .= wp_crm_display_table (array (
		'N#',
		'Denumire produse si servicii',
		'UM',
		'Cantitatea',
		'Pret unitar<br/>fara TVA (lei)',
		'Valoare (lei)',
		'TVA (lei)'
		), $products);
	
	}

function wp_crm_crediteurope_payment ($invoice, $echo = FALSE) {
	global $wpdb;
	
	$clientId = '130000119';
	$storeKey = 'SKEY12345';
	$url = 'https://paysafe.crediteurope.ro/servlet/est3Dgate';

	$installement = intval($_POST['wpshop_installement']);
	if ($installement < 2 || $installement > 10) $installement = '';
	$rnd = md5(microtime());
	$okUrl = WP_CRM_URL . '/ajax/actions/card-paid.php?inv=' . $invoice->get('id');
	$failUrl = WP_CRM_URL . '/ajax/actions/card-error.php?inv=' . $invoice->get('id');
	$islemtipi="Auth";

	$amount = $invoice->get ('value');	
	
	$out = '<p>Ai posibilitatea sa platesti <strong>chiar acum</strong>, online, factura primita pe email, cu ajutorul cardului. Apasa butonul <strong>PLATESTE ACUM</strong> si urmeaza pasii, completand cu atentie toate campurile indicate. Plata online se realizeaza securizat prin intermediul Credit Europe Bank. Pentru a plati online, trebuie sa fii de acord cu <a href="/ro/termeni-si-conditii" target="_blank">termenii si conditiile Extreme Training</a> pentru plata online!</p>
<p>Daca vrei sa platesti mai tarziu, conform instructiunilor primite deja prin email, ai urmatoarele posibilitati:
<ul type="square">
        <li>prin ordin de plata sau virament bancar</li>
        <li>prin numerar sau card, la sediul companiei noastre</li>
</ul>
<p>Iti multumim pentru increderea acordata Extreme Training!</p>
<p>Atragem atentia ca numai posesorii de Card Avantaj pot beneficia de sistemul de rate! In cazul in care folositi un card electronic obisnuit, va rugam sa mentionati acest lucru in formularul de plata de mai jos.</p>
<form action="'.$url.'" method="post" target="_blank" class="wp-crm-shop-green-table" style="text-align: center; padding: 5px; margin: 5px 20px;">
<p>Poti achita chiar acum, apasand butonul <strong>PLATESTE ACUM</strong> pentru a te conecta pe site-ul Credit Europe Bank si a plati online.</p>
<br />
<input type="hidden" name="clientid" value="'.$clientId.'" />
<input type="hidden" name="amount" value="'.$amount.'" />
<input type="hidden" name="oid" value="'.$oid.'" />
<input type="hidden" name="okUrl" value="'.$okUrl.'" />
<input type="hidden" name="failUrl" value="'.$failUrl.'" />
<input type="hidden" name="islemtipi" value="'.$islemtipi.'" />
<label>Numar Rate (exclusiv pentru posesorii de Card Avantaj): </label>
<select name="taksit" style="text-align: center;">
	<option value="">Nu am Card Avantaj</option>
	<option value="">1</option>
	<option value="2">2</option>
	<option value="3">3</option>
	<option value="4">4</option>
	<option value="5">5</option>
	<option value="6">6</option>
	<option value="7">7</option>
	<option value="8">8</option>
	<option value="9">9</option>
	<option value="10">10</option>
</select>
<input type="hidden" name="rnd" value="'.$rnd.'" />
<input type="hidden" name="refreshtime" value="5" />

<input type="hidden" name="hash" value="'.base64_encode(pack('H*',sha1($clientId.$oid.$amount.$okUrl.$failUrl.$islemtipi.$installement.$rnd.$storeKey))).'" />

<input type="hidden" name="storetype" value="3d_pay_hosting" />
<input type="hidden" name="firmaaid" value="Extreme Training SRL" />
<input type="hidden" name="lang" value="ro" />

<input type="hidden" name="email" value="'.$invoice->buyer->get('email').'" />
<input type="hidden" name="userid" value="'.$invoice->buyer->get('id').'" />
	
<input type="hidden" name="Faturafirma" value="Extreme Training SRL" />
<input type="hidden" name="Fismi" value="" />
<input type="hidden" name="Fadres" value="Calea Plevnei, nr. 61" />
<input type="hidden" name="Fil" value="Bucuresti" />
<input type="hidden" name="Filce" value="Sector 1" />
<input type="hidden" name="Fpostakodu" value="" />
<input type="hidden" name="tel" value="+40314252534" />
<input type="hidden" name="Fulkekod" value="642" />
	
<input type="hidden" name="NakliyeFirma" value="'.$invoice->buyer->get('name').'" />
<input type="hidden" name="tismi" value="'.$invoice->buyer->get('name').'" />
<input type="hidden" name="tadres1" value="'.$invoice->buyer->get('address').'" />
<input type="hidden" name="til" value="'.$invoice->buyer->get('county').'" />
<input type="hidden" name="tilce" value="" />
<input type="hidden" name="tpostakodu" value="" />
<input type="hidden" name="tulkekod" value="642" />';
	
	$products = $invoice->get();
	$c = 0;
	foreach ($products as $product) {
		$out .= '<input type="hidden" name="itemnumber'.$c.'" value="'.$product['product']->get('name').'" />';
		$out .= '<input type="hidden" name="productcode'.$c.'" value="'.$product['product']->get('current code').'" />';
		$out .= '<input type="hidden" name="qty'.$c.'" value="'.$product['quantity'].'" />';
		$out .= '<input type="hidden" name="desc'.$c.'" value="'.$product['product']->get('name').'" />';
		$out .= '<input type="hidden" name="id'.$c.'" value="'.$product['product']->get().'" />';
		$out .= '<input type="hidden" name="price'.$c.'" value="'.round($product['quantity'] * $product['product']->get('price'),2).'" />';
		$out .= '<input type="hidden" name="total'.$c.'" value="'.round($product['quantity'] * $product['product']->get('vat value'),2).'" />';
		$c++;
		}
	$out .= '<input type="submit" name="q" value="PLATESTE ACUM!" />';
	$out .= '</form>';
	$out .= '<p align="center"><img src="'.WP_CRM_URL.'/images/visa.jpg" alt="Verified by VISA" title="Verified by VISA" /><img src="'.WP_CRM_URL.'/images/mastercard.jpg" alt="Mastercard Secure" title="Mastercard Secure" /></p>';
	
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_person ($participant, $echo = FALSE) {
	$out = '<form action="" method="post">
	<input type="hidden" name="wp_crm_quick_person_id" value="'.$participant->get().'" />
<table class="widefat"><tr><th>Nume:</th><td>
	<input type="text" name="wp_crm_quick_person_last_name" value="'.$participant->get('last_name').'"  class="widefat"/>
</td></tr><tr><th>Prenume:</th><td>
	<input type="text" name="wp_crm_quick_person_first_name" value="'.$participant->get('first_name').'"  class="widefat"/>
</td></tr><tr><th>Serie CI:</th><td>
	<input type="text" name="wp_crm_quick_person_id_series" value="'.$participant->get('id_series').'"  class="widefat"/>
</td></tr><tr><th>Numar CI:</th><td>
	<input type="text" name="wp_crm_quick_person_id_number" value="'.$participant->get('id_number').'"  class="widefat"/>
</td></tr><tr><th>Eliberat de:</th><td>
	<input type="text" name="wp_crm_quick_person_id_issuer" value="'.$participant->get('id_issuer').'"  class="widefat"/>
</td></tr><tr><th>La data:</th><td>
	<input type="text" name="wp_crm_quick_person_id_expire" value="'.$participant->get('id_expire').'"  class="widefat"/>
</td></tr><tr><th>Adresa:</th><td>
	<input type="text" name="wp_crm_quick_person_address" value="'.$participant->get('address').'"  class="widefat"/>
</td></tr><tr><th>Judet:</th><td>
	<input type="text" name="wp_crm_quick_person_county" value="'.$participant->get('county').'"  class="widefat"/>
</td></tr><tr><th>Locul nasterii:</th><td>
	<input type="text" name="wp_crm_quick_person_id_place" value="'.$participant->get('id_place').'"  class="widefat"/>
</td></tr><tr><th>Prenumele tatalui:</th><td>
	<input type="text" name="wp_crm_quick_person_id_father" value="'.$participant->get('id_father').'"  class="widefat"/>
</td></tr><tr><th>Prenumele mamei:</th><td>
	<input type="text" name="wp_crm_quick_person_id_mother" value="'.$participant->get('id_mother').'"  class="widefat"/>
</td></tr><tr><th>Telefon:</th><td>
	<input type="text" name="wp_crm_quick_person_phone" value="'.$participant->get('phone').'"  class="widefat"/>
</td></tr><tr><th>Email:</th><td>
	<input type="text" name="wp_crm_quick_person_email" value="'.$participant->get('email').'"  class="widefat"/>
</td></tr><tr><td colspan="2" align="center">
	<input type="button" name="wp_crm_quick_person" value="Actualizeaza!" class="wp-crm-ajax-form" />
</td></tr></table></form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_company ($company, $echo = FALSE) {
	$out = '<form action="" method="post">
	<input type="hidden" name="wp_crm_quick_company_id" value="'.$company->get().'" />
<table class="widefat"><tr><th>Denumire:</th><td>
	<input type="text" name="wp_crm_quick_company_name" value="'.$company->get('name').'"  class="widefat"/>
</td></tr><tr><th>R/C:</th><td>
	<input type="text" name="wp_crm_quick_company_rc" value="'.$company->get('rc').'"  class="widefat"/>
</td></tr><tr><th>CUI:</th><td>
	<input type="text" name="wp_crm_quick_company_uin" value="'.$company->get('uin').'"  class="widefat"/>
</td></tr><tr><th>Adresa:</th><td>
	<input type="text" name="wp_crm_quick_company_address" value="'.$company->get('address').'"  class="widefat"/>
</td></tr><tr><th>Judet:</th><td>
	<input type="text" name="wp_crm_quick_company_county" value="'.$company->get('county').'"  class="widefat"/>
</td></tr><tr><th>Banca:</th><td>
	<input type="text" name="wp_crm_quick_company_bank" value="'.$company->get('bank').'"  class="widefat"/>
</td></tr><tr><th>Cont:</th><td>
	<input type="text" name="wp_crm_quick_company_account" value="'.$company->get('account').'"  class="widefat"/>
</td></tr><tr><th>Telefon:</th><td>
	<input type="text" name="wp_crm_quick_company_phone" value="'.$company->get('phone').'"  class="widefat"/>
</td></tr><tr><th>Fax:</th><td>
	<input type="text" name="wp_crm_quick_company_fax" value="'.$company->get('fax').'"  class="widefat"/>
</td></tr><tr><th>E-mail:</th><td>
	<input type="text" name="wp_crm_quick_company_email" value="'.$company->get('email').'"  class="widefat"/>
</td></tr><tr><td colspan="2" align="center">
	<input type="button" name="wp_crm_quick_company" value="Actualizeaza!" class="wp-crm-ajax-form" />
</td></tr></table></form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_instance_participant ($product, $echo = FALSE) {
	$out = '';

	$out = '<form action="" method="post">
	<input type="hidden" name="wp_crm_instance_participant_add" value="1" />
	<input type="hidden" name="wp_crm_instance_product" value="'.$product->get('current code').'" />
	<table class="widefat">
		<tr><th>Participant:</th><td><input type="text" name="wp_crm_instance_participant_uin" value="" class="widefat" /></td></tr>
		<tr><th>Factura:</th><td><input type="text" name="wp_crm_instance_participant_invoice" value="" class="widefat" /></td></tr>
		<tr><td align="center" colspan="2"><input type="button" name="wp_crm_instance_participant_add" value="Adauga!" class="wp-crm-ajax-form" /></td></tr>
	</table>
</form>';
	
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_instance_price ($product, $stamp = null, $echo = FALSE) {
	$out = '';
	
	$out .= '<form action="" method="post">
	<input type="hidden" name="wp_crm_quick_instance_price" value="'.$product->get('current code').'" />
	<table class="widefat">
		<tr>
			<td>Pret (fara TVA)</td><td><input type="text" name="wp_crm_product_instance_price" value="" class="widefat" /></td>
		</tr>
		<tr>
			<td>Intreg (fara TVA)</td><td><input type="text" name="wp_crm_product_instance_full" value="" class="widefat" /></td>
		</tr>
		<tr>
			<td>TVA</td><td>
				<select name="wp_crm_product_instance_vat">
					<option value="0">0%</option>
					<option'.($product->get('vat') ? ' selected' : '').' value="24">24%</option>
				</select>
			</td>
		</tr>
		<tr>
			<td>Incepand cu</td><td><input type="text" name="wp_crm_product_instance_stamp" value="'.date('d-m-Y H:i').'" class="widefat" /></td>
		</tr>
		<tr>
			<td align="center" colspan="2"><input type="button" name="wp_crm_quick_instance_price" value="Adauga!" class="wp-crm-ajax-form" /></td>
		</tr>
	</table>
</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_instance_cnfpa ($product, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">
	<input type="hidden" name="wp_crm_quick_instance_cnfpa" value="'.$product->get('current code').'" />
	<table class="widefat">
                <tr>
			<td>Cod COR:</td><td><input type="text" name="wp_crm_product_instance_corno" value="'.$product->get('current corno').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Denumire ANC:</td><td><input type="text" name="wp_crm_product_instance_ancname" value="'.$product->get('current ancname').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Durata (ore):</td><td><input type="text" name="wp_crm_product_instance_hours" value="'.$product->get('current hours').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Din care teorie (ore):</td><td><input type="text" name="wp_crm_product_instance_theory" value="'.$product->get('current theory').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Studii:</td><td><input type="text" name="wp_crm_product_instance_studies" value="'.$product->get('current studies').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Autorizatie ANC:</td><td><input type="text" name="wp_crm_product_instance_ancauth" value="'.$product->get('current anc auth').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>RNFFPA:</td><td><input type="text" name="wp_crm_product_instance_rnffpa" value="'.$product->get('current rnffpa').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Presedinte ANC:</td><td><input type="text" name="wp_crm_product_instance_ancrep" value="'.$product->get('current ancrep').'" class="widefat" /></td>
		</tr>
                <tr>
			<td>Competente ANC:</td><td><textarea rows="5" name="wp_crm_product_instance_competences" class="widefat">'.$product->get('current competences').'</textarea></td>
		</tr>
		<tr>
			<td align="center" colspan="2"><input type="button" name="wp_crm_quick_instance_cnfpa" value="Actualizeaza!" class="wp-crm-ajax-form" /></td>
		</tr>
	</table>
</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_customers ($product, $paying = TRUE, $echo = FALSE) {
	$out = '';

	$participants = $product->get('participants');
	$rows = array ();
	$c = 1;
	if (!empty($participants))
		foreach ($participants as $participant) {
			if ($paying && !$participant->is('paying customer')) continue;
			$rows[] = array (
				($c++).'.',
				$participant->get('name'),
				$participant->get('uin'),
				);
			}
	if (empty($rows)) $rows[] = array ('0.', '-', '-');
	$rows[] = array ('<a href="/wp-admin/admin.php?page=wp_crm_participants&product='.$product->get('current code').($paying ? '&customer=paying' : '').'" target="_blank">Management Participanti <img src="'.WP_CRM_URL.'/icons/link.png" alt="" title="" /></a>');

	$out .= wp_crm_display_table (null, $rows);

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_invoices ($product, $paid = TRUE, $echo = FALSE) {
	$out = '';
	$invoices = $product->get ($paid ? 'income invoices' : 'invoices');
	$rows = array ();
	$c = 1;
	$rows[] = array ('#', 'Serie', 'Valoare', 'Platit');
	$tval = 0;
	$tpay = 0;
	if (!empty($invoices))
		foreach ($invoices as $invoice) {
			$rows[] = array (
				($c++).'.',
				'<a href="' . WP_CRM_URL . '/ajax/actions/invoice.php?i='.$invoice->get('id').'&r='.rand(1,100).'" target="_blank">'.$invoice->get('invoice_series').$invoice->get('invoice_number').'</a>',
				$invoice->get('value').' lei',
				$invoice->get('paid value').' lei',
				);
			$tval += $invoice->get('value');
			$tpay += $invoice->get('paid value');
			}
	$rows[] = array ('', 'Total', $tval.' lei', $tpay.' lei');

	$out .= wp_crm_display_table (null, $rows);

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_sessions ($product, $echo = FALSE) {
	$out = '';

	$rows = array ();
	$c = 1;

	$sessions = $product->get ('planning');
	if (!empty($sessions))
		foreach ($sessions as $code => $stamp) {
			$rows[] = array (
				($c++).'.',
				'<a href="/wp-admin/admin.php?page=wp_crm_participants&product='.$code.'" target="_blank">'.$code.'</a>',
				date('d-m-Y H:i', $stamp),
				);
			}

	$rows[] = array ('<a href="/wp-admin/admin.php?page=wp_crm_products&product='.$product->get('id').'" target="_blank">'.$product->get('current series').' &raquo;</a>');


	$out .= wp_crm_display_table (null, $rows);

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_buyer ($invoice, $echo = FALSE) {
	$out = '<form action="" method="post">
<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />
<input type="hidden" name="wp_crm_quick_change_buyer" value="1" />';
	if (is_object ($invoice->buyer))
		$out .= '<table class="widefat">
	<tr><th colspan="2">Modifica Cumparator</th></tr>
	<tr><th>CUI/CNP:</th><td><input type="text" name="wp_crm_quick_buyer_uin" value="'.$invoice->buyer->get('uin').'" class="widefat" /></td></tr>
	<tr><th>CNP Delegat:</th><td><input type="text" name="wp_crm_quick_delegate_uin" value="'.(is_object($invoice->delegate) ? $invoice->delegate->get('uin') : '').'" class="widefat" /></td></tr>
	<tr><td align="center" colspan="2"><input type="button" name="wp_crm_quick_change_buyer" value="Modifica" class="wp-crm-ajax-form" /></td></tr>
</table>';
	else
		$out .= '<table class="widefat">
	<tr><th colspan="2">Adauga Cumparator</th></tr>
	<tr><th>CUI/CNP:</th><td><input type="text" name="wp_crm_quick_buyer_uin" value="" class="widefat" /></td></tr>
	<tr><th>CNP Delegat:</th><td><input type="text" name="wp_crm_quick_delegate_uin" value="" class="widefat" /></td></tr>
	<tr><td align="center" colspan="2"><input type="button" name="wp_crm_quick_buyer" value="Adauga" /></td></tr>
</table>';
	$out .= '</form>';
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_products ($invoice, $echo = FALSE) {
	$out = '<form action="" method="post"><input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />';
	$out .= '<input type="hidden" name="wp_crm_quick_add_products" value="1" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><td colspan="2" style="color: #c00; text-align: justify;">Foloseste formularul pentru a adauga produse pe o factura. <br />In cazul in care produsul este in oferta noastra, selecteaza-l din lista si apasa <strong>Adauga</strong>. Completeaza in dreptul noului produs cantitatea necesara. Repeta procesul pentru fiecare produs pe care trebuie sa-l pui pe factura. Cand ai terminat, apasa <strong>Salveaza</strong>.<br />In cazul in care produsul nu este in oferta, completeaza-i numele (cat mai explicit) in campul <strong>Denumire</strong>, completeaza procentul TVA-ului aferent in casuta <strong>TVA</strong>, completeaza pretul produsului in casutele <strong>Val.</strong> sau <strong>Val. + VAT</strong>, dupa caz. Casuta libera va fi completata automat. Apasa <strong>Adauga</strong> pentru a adauga produsul pe factura, completeaza cantitatea si apasa <strong>Salveaza</strong>.<br /><strong>ATENTIE! Pe o factura pot exista cel mult un produs care nu exista in oferta si oricat de multe produse existente in oferta.</strong></td></tr>';
	$products = $invoice->get();

	if (!empty($products))
		foreach ($products as $product)
			$out .= '<tr><th>'.$product['product']->get('name').'</th><td><input style="width: 48px;" size="3" type="text" name="wp_crm_quick_quantity_'.$product['product']->get('current code').'" value="'.$product['quantity'].'" /></td></tr>';

	$out .= '<tr><td colspan="2" align="center"><select name="wp_crm_quick_product_list" id="wp-crm-quick-product-list">';
	$out .= '<option value="-1">Alege un produs din lista, sau completeaza datele de mai jos:</option>';
	$out .= wp_crm_product ();
	$out .= '</select></td></tr>';
	$out .= '<tr><td>';
	$out .= '<table class="widefat wp-crm-quick-product-new">';
	$out .= '<tr><th>Denumire</th><td colspan="5"><input type="text" name="wp_crm_quick_product_new" id="wp-crm-quick-product-new" value="" class="widefat" /></td></tr>';
	$out .= '<tr><th>Val.</th><td><input type="text" name="" id="wp-crm-quick-product-new-value" value="0" class="widefat" /></td>';
	$out .= '<th>Val.+TVA</th><td><input type="text" name="" id="wp-crm-quick-product-new-vat-value" value="0" class="widefat" /></td>';
	$out .= '<th>TVA</th><td><input type="text" name="" id="wp-crm-quick-product-new-vat" value="0" class="widefat" /></td></tr>';
	$out .= '</table>';
	$out .= '</td><td><input type="button" name="" value="Adauga" class="wp-crm-quick-product-add" /></td></tr>';

	$out .= '<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_add_products_save" value="Salveaza" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_participants ($invoice, $echo = FALSE) {
	$out = '';

	$products = $invoice->get();
	if (!empty($products)) {
		$out .= '<form action="" method="post">';
		$out .= '<input type="hidden" name="wp_crm_quick_participants" value="1" />';
		$out .= '<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />';

		$rows = array ();

		foreach ($products as $product) {
			if ($product['product']->get('name') == 'Discount') continue;

			$participants = $invoice->get('participants', $product['product']);
			$icon = '<div class="wp-crm-product-icon-'.strtolower($product['product']->get('icon')).'">'.$product['product']->get('icon').'</div>';
			
			for ($c = 0; $c<$product['quantity']; $c++)
				$rows[] = array (
					$icon,
					is_object($participants[$c]) ? $participants[$c]->get('name') : '',
					'<input type="text" name="wp_crm_quick_'.($product['product']->get('current code')).'_'.($c+1).'" value="'.(is_object($participants[$c]) ? $participants[$c]->get('uin') : '').'" class="widefat" />',
					);
			$rows[] = array (
				'<input type="button" class="wp-crm-ajax-form" value="Salveaza!" name="wp_crm_quick_participants" />',
				);
			}
		$out .= wp_crm_display_table (null, $rows);

		$out .= '</form>';
		}

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_date ($invoice, $paid = FALSE, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />';
	$out .= '<input type="hidden" name="wp_crm_quick_change_'.($paid ? 'paid' : '').'date" value="1" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><th>Data facturii:</th><td><input type="text" name="wp_crm_quick_invoice_'.($paid ? 'paid' : '').'date" value="'.date('d-m-Y', $invoice->get(($paid ? 'paid ' : '').'date')).'" /></td></tr>';
	$out .= '<tr><td colspan="2" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_change_date_save" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_delete ($invoice, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><th>Sterge ? (Da/Nu)</th><td><input type="text" class="widefat" name="wp_crm_quick_invoice_delete" value="" /></td></tr>';
	$out .= '<tr><th>Motivul stergerii:</th><td><select class="widefat" name="wp_crm_quick_invoice_delete_reason">
			<option value="">Alege o situatie:</option>
			<option value="mistake">Factura Gresita</option>
			<option value="duplicate">Factura Dublura</option>
			<option value="canceled">Participare Anulata</option>
			<option value="test">Test Intern</option>
		</select></td></tr>';
	$out .= '<tr><th colspan="2">Scurta descriere (obligatoriu):</th></tr>';
	$out .= '<tr><td colspan="2"><textarea class="widefat" rows="5" name="wp_crm_quick_invoice_delete_details"></textarea></td></tr>';
	$out .= '<tr><td colspan="2" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_change_date_save" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_payment ($invoice, $echo = FALSE) {
	$time = time();
	if ($invoice->is('paid')) $time = $invoice->get('date');

	$out = '<form action="" method="post">
<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />
<table class="widefat">
			<tr><td colspan="2" style="color: #c00; text-align: justify;">Foloseste formularul de mai jos pentru a achita o factura proforma sau pentru a plati diferenta pentru o factura fiscala.<br /><strong>ATENTIE! In cazul unei erori, nu incerca de mai multe ori sa achiti aceeasta factura! Noteaza-ti pasii pe care i-ai facut si contacteaza-l pe Bogdanel.</strong></td></tr>
			<tr><th>Metoda:</th><td>
			<select name="wp_crm_quick_paidby" class="widefat">
				<option value="bank">prin O.P.</option>
				<option value="card">prin card</option>
				<option value="taxr">bon fiscal</option>
				<option value="cash">chitanta</option>
			</select>
</td></tr><tr><th>Suma :</th><td>
			<input type="text" value="'.($invoice->is('partial paid') ? ($invoice->get('value') - $invoice->get('paid value')) : '').'" name="wp_crm_quick_paidamount" class="widefat" />
</td></tr><tr><th>Data facturii:</th><td>
			<input type="text" value="'.date('d-m-Y', $time).'" size="10" name="wp_crm_quick_invoicedate" class="widefat" />
</td></tr><tr><th>Data platii:</th><td>
			<input type="text" value="'.date('d-m-Y').'" size="10" name="wp_crm_quick_paiddate" class="widefat" />
</td></tr><tr><th>Banca:<br />(informatii care<br />apar pe factura)</th><td>
			<textarea name="wp_crm_quick_paiddetails" class="widefat" rows="3">'.$invoice->get('paid details').'</textarea>
</td></tr><tr><th>Mentiuni:<br />(informatii suplimentare,<br />nu apar pe factura)</th><td>
			<textarea name="wp_crm_quick_mentions" class="widefat" rows="3">'.$invoice->get('mentions').'</textarea>
</td></tr><tr><th>Aplica discount:</th><td>
			<input type="checkbox" value="1" name="wp_crm_quick_discount" checked />
</td></tr><tr><th>Factura avans:</th><td>
			<input type="checkbox" value="1" name="wp_crm_quick_advance" />
</td></tr><tr><th>Factura stornare:</th><td>
			<input type="checkbox" value="1" name="wp_crm_quick_storno" />
</td></tr><tr><td colspan="2" align="center">
			<input type="submit" name="wp_crm_quick_pay" value="Plateste!" />
</td></tr></table></form>';
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_company_delete ($company, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_company" value="'.$company->get().'" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><th>Sterge ? (Da/Nu)</th><td><input type="text" name="wp_crm_quick_company_delete" value="" /></td></tr>';
	$out .= '<tr><td colspan="2" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_company_delete" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_person_delete ($person, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_person" value="'.$person->get().'" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><th>Sterge ? (Da/Nu)</th><td><input type="text" name="wp_crm_quick_person_delete" value="" /></td></tr>';
	$out .= '<tr><td colspan="2" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_person_delete" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_client_edit ($client, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_client_voucher" value="'.$client->get('voucher').'" />';
	$out .= '<table class="widefat">';
	$cnfpa = $client->get('cnfpa');
	$out .= '<tr><th>Serie:</th><td><input type="text" name="wp_crm_quick_client_edit_series" value="'.wp_crm_extract_series($cnfpa).'" style="width: 24px;" class="widefat" /></td>
<th>Numar:</th><td><input type="text" name="wp_crm_quick_client_edit_number" class="widefat" value="'.wp_crm_extract_number($cnfpa).'" /></td></tr>';
	$out .= '<tr><th>Medie:</th><td><input type="text" name="wp_crm_quick_client_edit_grade" value="'.sprintf('%.2f', $client->get('grade')).'" class="widefat" /></td>
<th># Ord.:</th><td><input type="text" name="wp_crm_quick_client_edit_diploma" class="widefat" value="'.$client->get('diploma').'"></td></tr>';
	$out .= '<tr><td colspan="4" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_client_edit" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_send_email ($invoice, $echo = FALSE) {
	$out = '';

	$out .= '<form action="" method="post">';
	$out .= '<input type="hidden" name="wp_crm_quick_invoice" value="'.$invoice->get('id').'" />';
	$out .= '<input type="hidden" name="wp_crm_quick_send_email" value="1" />';
	$out .= '<table class="widefat">';
	$out .= '<tr><th>Expeditor:</th><td><select name="wp_crm_quick_email_sender" class="widefat">';
	$out .= wp_crm_responsible ($invoice->get('responsible'));
	$out .= '</select></td></tr>';
	$out .= '<tr><th>Destinatar:</th><td><select name="wp_crm_quick_email_receiver" class="widefat"><option value="-1">Toti</option>';

	$out .= '<option value="'.$invoice->buyer->get('uin').'">'.$invoice->buyer->get('name').'</option>';
	$participants = $invoice->get('participants');
	if (!empty($participants))
		foreach ($participants as $participant)
			$out .= '<option value="'.$participant->get('uin').'">'.$participant->get('name').'</option>';

	$out .= '</select></td></tr>';
	$out .= '<tr><th>Template:</th><td><select name="wp_crm_quick_email_template" class="widefat">';
	$out .= '<option value="">Alege un model ...</option>';
	$out .= '<option value="register">Confirmare inregistrare</option>';
	$out .= '<option value="payments">Confirmare plata</option>';
	$out .= '<option value="reminder">Reminder plata</option>';
	$out .= '<option value="replaned">Reprogramare curs</option>';
	$out .= '<option value="canceled">Anulare curs</option>';
	$out .= '</select></td></tr>';
	$out .= '<tr><td colspan="2" align="center"><input type="button" value="Salveaza" name="wp_crm_quick_send_email" class="wp-crm-ajax-form" /></td></tr>';
	$out .= '</table>';
	$out .= '</form>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_extract_series ($code) {
	return trim(preg_replace('/[^A-Z]+/','',strtoupper($code)));
	}

function wp_crm_extract_number ($code) {
	return intval(preg_replace('/[^0-9]+/','',$code));
	}

function wp_crm_detect_person ($uin) {
	$uin = preg_replace('/[^0-9]+/', '', trim(strtoupper($uin)));
	$uin = str_split ($uin);
	if (count($uin) < 11) {
		$key = str_split ('753217532');
		$uin = array_reverse ($uin);
		$key = array_reverse ($key);
		$ctr = 0;
		for ($c = 1; $c < count($uin); $c++) $ctr += ((int) $uin[$c]) * ((int) $key[$c-1]);
		$ctr %= 11; $ctr = $ctr > 9 ? 0 : $ctr;
		#if ($ctr == $uin[0])
		return 'company';
		}
	else
	if (count($uin) == 13) {
		$key = str_split ('279146358279');
		$ctr = 0;
		for ($c = 0; $c < 12; $c++) $ctr += ((int) $uin[$c]) * ((int) $key[$c]);
		#if ($ctr == $uin[12])
		return 'person';
		}
	return FALSE;
	}

function wp_crm_valid_person_uin ($uin) {
	$uin = preg_replace('/[^0-9]+/','',$uin);
	if (strlen($uin) != 13) return FALSE;
	$gender = substr($uin,0,1);
	$year = substr($uin, 1, 2);
	$month = substr($uin, 3, 2);
	$day = substr($uin, 5, 2);

	if (!in_array($gender, array(1,2,5,6))) return FALSE;
	if (($gender == 1 || $gender == 2) && strtotime('19'.$year.'-'.$month.'-'.$day) === FALSE) return FALSE;
	if (($gender == 5 || $gender == 6) && strtotime('20'.$year.'-'.$month.'-'.$day) === FALSE) return FALSE;

	$key = array (2,7,9,1,4,6,3,5,8,2,7,9);
	$control = 0;
	for ($c = 0; $c<12; $c++) $control += ((int)substr($uin,$c,1))*$key[$c];
	$control %= 11;
	if ($control == 10) $control = 1;
	if (substr($uin,12,1) != $control) return FALSE;
	return TRUE;
	}

function wp_crm_generate_uin ($gender = 'M', $county = 'B') {
	$counties = array (
		'AB' => 1,
		'AR' => 2,
		'AG' => 3,
		'BC' => 4,
		'BH' => 5,
		'BN' => 6,
		'BT' => 7,
		'BV' => 8,
		'BR' => 9,
		'BZ' => 10,
		'CS' => 11,
		'CJ' => 12,
		'CT' => 13,
		'CV' => 14,
		'DB' => 15,
		'DJ' => 16,
		'GL' => 17,
		'GJ' => 18,
		'HR' => 19,
		'HD' => 20,
		'IL' => 21,
		'IS' => 22,
		'IF' => 23,
		'MM' => 24,
		'MH' => 25,
		'MS' => 26,
		'NT' => 27,
		'OT' => 28,
		'PH' => 29,
		'SM' => 30,
		'SJ' => 31,
		'SB' => 32,
		'SV' => 33,
		'TR' => 34,
		'TM' => 35,
		'TL' => 36,
		'VS' => 37,
		'VL' => 38,
		'VR' => 39,
		'B'  => 40,
		'S1' => 41,
		'S2' => 42,
		'S3' => 43,
		'S4' => 44,
		'S5' => 45,
		'S6' => 46,
		'CL' => 51,
		'GR' => 52,
		);
	$uin = ($gender == 'M' ? 5 : 6).date('ymd').($counties[$county] < 10 ? '0'.$counties[$county] : $counties[$county]).substr(date('is'),1,3);
	$key = array (2,7,9,1,4,6,3,5,8,2,7,9);
	$control = 0;
	for ($c = 0; $c<12; $c++) $control += ((int)substr($uin,$c,1))*$key[$c];
	$control %= 11;
	if ($control == 10) $control = 1;
	$uin .= $control;
	return $uin;
	}

function wp_crm_avatar ($email, $size = 16) {
	$email = strtolower($email);
	if (strpos($email,'yahoo.com') !== FALSE) $default = 'http://img.msg.yahoo.com/avatar.php?yids='.preg_replace('/@.*/','',$email);
	return get_avatar ($email, $size, $default).' <a href="http://www.facebook.com/search/results.php?q='.urlencode($email).'" target="_blank"><img src="' . WP_CRM_URL .'/images/facebook.png" alt="" title="" /></a>';
	}

function wp_crm_mail ($receiver, $subject, $content, $attachments = array(), $from = null) {
	global $gpwd;
	include_once (dirname(__FILE__).'/libs/class.phpmailer.php');
	$mail = new PHPMailer(true);

	if (!$from) $from = 'secretariat@traininguri.ro';
	$from = strtolower(trim($from));

	//echo $from.' '.$gpwd[$from]['password']."\n";
//	echo $from.' '.$gpwd[$from]['name']."\n";

	$mail->IsSMTP();
	try {
		$mail->Host       = "traininguri.ro";
		$mail->SMTPDebug  = false;				// 2 for debuging // false
		$mail->SMTPAuth   = true;
		$mail->SMTPSecure = "ssl";
		$mail->Host       = "smtp.gmail.com";
		$mail->Port       = 465;
		$mail->Username   = $from;
		$mail->Password   = $gpwd[$from]['password'];            // GMAIL password
		$mail->AddAddress ($receiver);
		$mail->SetFrom ($from, $gpwd[$from]['name']);
		$mail->AddReplyTo ($from, $gpwd[$from]['name']);
		$mail->Subject = $subject;
		$mail->MsgHTML ($content);
		
		if (!empty($attachments))
			foreach ($attachments as $name => $path)
				$mail->AddAttachment ($path, $name);

		$mail->Send ();
		}
	catch (phpmailerException $e) {
		echo $e->errorMessage();
		}
	return TRUE;
	}

function wp_crm_responsible ($uid = 0, $echo = false) {
	$out = '';
	$responsibles = get_users (array ('role' => 'administrator'));
	foreach ($responsibles as $responsible) {
		$out .= '<option value="'.$responsible->ID.'"'.($responsible->ID == $uid ? ' selected' : '').'>'.$responsible->display_name.'</option>';
		}
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product_types ($tid = 0, $out = '') {
	$types = array (
		'Curs',
		'Curs acreditat CNFPA',
		'Conferinta Extreme Training',
		'Eveniment Extreme Training'
		);
	switch ($out) {
		case 'echo':
			$out = '';
			foreach ($types as $key => $value)
				$out .= '<option value="'.$key.'"'.($key == $tid ? ' selected' : '').'>'.$value.'</option>';
			echo $out;
			break;
		case 'extract':
			$out = $tid; $tid = 0;
			foreach ($types as $key => $type)
				if (strpos($out, $type) !== FALSE) $tid = $key;
			return $tid;
			break;
		case 'remove':
			$out = $tid;
			foreach ($types as $type)
				$out = str_replace ($type . ': ', '', $out);
			return trim(preg_replace ('/ +/', ' ', $out));
			break;
		case 'array':
			return $types;
			break;
		case 'value':
			return $types[$tid].': ';
			break;
		default:
			$out = '';
			foreach ($types as $key => $value)
				$out .= '<option value="'.$key.'"'.($key == $tid ? ' selected' : '').'>'.$value.'</option>';
			return $out;
			break;
		}
	}

function wp_crm_product_cities ($cid = 0, $out = '') {
	$cities = array (
		'Bucuresti',
		'Brasov',
		'Cluj Napoca',
		'Ploiesti',
		'Timisoara',
		);
	switch ($out) {
		case 'echo':
			$out = '';
			foreach ($cities as $key => $value)
				$out .= '<option value="'.$key.'"'.($key == $cid ? ' selected' : '').'>'.$value.'</option>';
			echo $out;
			break;
		case 'extract':
			$out = $cid; $cid = 0;
			foreach ($cities as $key => $city)
				if (strpos($out, $city) !== FALSE) $cid = $key;
			return $cid;
			break;
		case 'remove':
			$out = $cid;
			foreach ($cities as $city)
				$out = str_replace ($city, '', $out);
			return trim(preg_replace ('/ +/', ' ', $out));
			break;
		case 'array':
			return $cities;
			break;
		case 'value':
			return $cities[$cid];
			break;
		default:
			$out = '';
			foreach ($cities as $key => $value)
				$out .= '<option value="'.$key.'"'.($key == $cid ? ' selected' : '').'>'.$value.'</option>';
			return $out;
			break;
		}
	}

function wp_crm_trainer ($tid = 0, $echo = false) {
	$out = '';
	$trainers = get_posts ('cat=664&posts_per_page=-1');
	foreach ($trainers as $trainer) {
		$out .= '<option value="'.$trainer->ID.'"'.($trainer->ID == $tid ? ' selected' : '').'>'.get_the_title($trainer->ID).'</option>';
		}
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_location ($lid = 0, $echo = false) {
	global $wpdb;
	$out = '';
	$locations = $wpdb->get_results ($wpdb->prepare ('select * from `'.$wpdb->prefix.'product_locations` order by id;'));
	foreach ($locations as $location) {
		$out .= '<option value="'.$location->id.'"'.($location->id == $lid ? ' selected' : '').'>'.$location->title.'</option>';
		}
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_product ($code = '', $echo = false) {
	$out = '';

	$wp_crm_products = new WP_CRM_List ('products', array ('active'));
	foreach (($wp_crm_products->get()) as $product)
		$out .= '<option value="'.$product->get('current code').'"'.($code == $product->get('current code') ? ' selected' : '').'>'.$product->get('name').'</option>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_plan ($product, $code = '', $echo = false) {
	$out = '';
	$plans = $product->get('planning');
	foreach ($plans as $plan => $stamp) {
		$out .= '<option value="'.$plan.'"'.($plan == $code ? ' selected' : '').'>'.$plan.' ('.date('d-m-Y', $stamp).')</option>';
		}
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_structure ($product, $echo = false) {
	$out = '';
	$a = '';
	$b = '';
	$stamp = $product->get('current stamp');
	$struct = $product->get('structure', $product->get('current code'));
	for ($d = 0; $d<21; $d++) {
		$a .= '<td'.(date('N',$stamp) == 7 ? ' style="background: #c00; color: #fff;"' : '').'>'.date('d/m',$stamp).'</td>';
		$b .= '<td align="center"><input type="checkbox" value="true" name="wp_crm_quick_structure_'.$d.'" '.((($struct >> $d) & 1) == 1 ? ' checked' : '').'/></td>';
		$stamp += 86400;
		}
	$out = '<form action="" method="post"><input type="hidden" name="wp_crm_quick_structure" value="1" /><input type="hidden" name="wp_crm_quick_structure_instance" value="'.$product->get('current code').'"><table class="widefat"><tr>'.$a.'</tr><tr>'.$b.'</tr><tr><td colspan="21" align="center"><input type="button" name="wp_crm_quick_structure" value="Modifica!" class="wp-crm-ajax-form wp-crm-button-primary" /></td></tr></table></form>';
	
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_hsv2rgb ($h, $s, $v) {
	$s /= 256.0;
	if ($s == 0.0)
		return '#'.str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT);
	$h /= (256.0 / 6.0);
	$i = floor($h);
	$f = $h - $i;
	$p = (integer)($v * (1.0 - $s));
	$t = (integer)($v * (1.0 - $s * (1.0 - $f)));
	if ($i == 0)
		return '#'.str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($t), 2, '0', STR_PAD_LEFT).str_pad(dechex($p), 2, '0', STR_PAD_LEFT);
	$q = (integer)($v * (1.0 - $s * $f));
	if ($i == 1)
		return '#'.str_pad(dechex($q), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($p), 2, '0', STR_PAD_LEFT);
	if ($i == 2)
		return '#'.str_pad(dechex($p), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($t), 2, '0', STR_PAD_LEFT);
	if ($i == 3)
		return '#'.str_pad(dechex($p), 2, '0', STR_PAD_LEFT).str_pad(dechex($q), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT);
	if ($i == 4)
		return '#'.str_pad(dechex($t), 2, '0', STR_PAD_LEFT).str_pad(dechex($p), 2, '0', STR_PAD_LEFT).str_pad(dechex($v), 2, '0', STR_PAD_LEFT);
	return '#'.str_pad(dechex($v), 2, '0', STR_PAD_LEFT).str_pad(dechex($p), 2, '0', STR_PAD_LEFT).str_pad(dechex($q), 2, '0', STR_PAD_LEFT);
	}

function wp_crm_colorpick ($echo = false, $color = '#FFFFFF') {
	$out = '';
	$max = 5;

	$out .= '<table cellspacing="0" class="wp-crm-colorpicker">';
	for ($c = 0; $c<$max*$max; $c++) {
		$rgb = wp_crm_hsv2rgb((255.0*$c)/($max*$max), 255.0, 255.0);
		if ($c%$max == 0) $out .= '<tr>';
		if ($c == 0) $out .= '<td style="border: 0; vertical-align: middle;" rowspan="'.$max.'"><span style="display: block; width: 64px; height: 64px; border: 1px solid #eee; background-color: '.$color.'; border-radius: 3px;"></span><input type="hidden" name="wp_crm_colorpick" value="'.$color.'" /></td>';
		$out .= '<td style="border: 0;"><a style="text-decoration: none; border: 0; display: block; width: 16px; height: 16px; border-radius: 3px; background-color: '.$rgb.';" rel="'.$rgb.'"></a></td>';
		if ($c%$max == $max-1) $out .= '</tr>';
		}
	$out .= '</table>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_grade ($echo = false, $checked = 0, $min = 1, $max = 10) {
	$out = '';

	$out .= '<table cellspacing="0" class="wp-crm-grade"><tr>';
	for ($c = $min; $c<=$max; $c++) {
		$rgb = wp_crm_hsv2rgb(0.0, (255.0*$c)/($max-$min+1), 255.0);
		$out .= '<td style="border: 0; margin: 0; padding: 1px;"><a rel="'.$c.'" style="background-color: '.$rgb.'; border-radius: 3px; display: block; cursor: pointer; width: 16px; height: 16px; text-align: center; vertical-align: center; font-size: 8pt; line-height: 16px; color: #000;">'.$c.'</a></td>';
		}
	$out .= '</tr></table>';

	if ($echo) echo $out;
	return $out;
	}

function wp_crm () {
	global $current_user;
	$request = false;
	$current_user = wp_get_current_user();
	$out = '';
	$out .= '<h2>Bine te-am gasit, '.$current_user->display_name.'!</h2>
<div style="float: right;">
<span class="wp-crm-popup-ajax" rel="uin_generator"><img src="'.WP_CRM_URL.'/icons/search.png" alt="" title=""> generator CNP</span><div class="wp-crm-popup"></div>
<span class="wp-crm-popup-ajax" rel="search_person"><img src="'.WP_CRM_URL.'/icons/search.png" alt="" title=""> persoana</span><div class="wp-crm-popup"></div>
<span class="wp-crm-popup-ajax" rel="search_company"><img src="'.WP_CRM_URL.'/icons/search.png" alt="" title=""> companie</span><div class="wp-crm-popup"></div></div>';

	$out .= '<div class="tablenav"><div class="tablenav-pages"><span class="pagination-links">';
	$out .= '<a href="'.add_query_arg('r', '', $_SERVER['REQUEST_URI']).'"'.($_GET['r'] == '' ? ' class="current"' : '').'>'.$current_user->display_name.'</a>';
	$out .= '<a href="'.add_query_arg('r', 'all', $_SERVER['REQUEST_URI']).'"'.($_GET['r'] == 'all' ? ' class="current"' : '').'>All</a>';
	$out .= '</span></div></div>';

	$out .= '<h3>Cursuri active:</h3>';

	$wp_crm_products = new WP_CRM_List ('products', $_GET['r'] == 'all' ? array ('active') : array ('mine', 'active'));
	$rows = array ();
	$c = 1;
	foreach (($wp_crm_products->get()) as $product) {
		$rows[] = array (
			($c++).'.',
			'<div style="float: left;" class="wp-crm-product-icon-'.strtolower($product->get('icon')).'">'.$product->get('icon').'</div>',

			'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" /><div class="wp-crm-popup"></div>'.
			date ('d-m-Y H:i', $product->get('current stamp')),

			'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" /><div class="wp-crm-popup"></div>'.
			$product->get('nice name'),

			'<img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_participant-'.$product->get('current code').'"/><div class="wp-crm-popup"></div> ' .
			$product->get('participants number').
			' <img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="product_customers-'.$product->get('current code').'" /><div class="wp-crm-popup"></div>',

			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="product_clients-'.$product->get('current code').'" /><div class="wp-crm-popup"></div> '
			.$product->get('paying number'),

			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="product_sessions-'.$product->get('current code').'"/><div class="wp-crm-popup"></div>',
			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="product_invoices-'.$product->get('current code').'"/><div class="wp-crm-popup"></div> '
			.$product->get('potential'),
			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="product_paid_invoices-'.$product->get('current code').'" /><div class="wp-crm-popup"></div> '
			.$product->get('income'),
			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" /> ',
			);
		}

	$cols = array (
		'#',
		'',
		'Data',
		'Denumire',
		'Participanti',
		'Platitori',
		'Sesiuni',
		'$',
		'$ +',
		'$ -',
		);

	$out .= wp_crm_display_table ($cols, $rows, array ('class' => 'widefat wp-crm-table wp-crm-raised nofooter'));


	$out .= '<div class="tablenav"><div class="tablenav-pages"><span class="pagination-links">';
	for ($c = 1; $c < 4; $c++)
	$out .= '<a href="'.add_query_arg('t', 30*$c, $_SERVER['REQUEST_URI']).'"'.(((30*$c == intval($_GET['t'])) || ($c == 1 && !$_GET['t'])) ? ' class="current"' : '').'>'.(30*$c).'</a>';
	$out .= '</span></div></div>';

	$out .= '<h3>Facturi din ultimele '.($_GET['t'] ? $_GET['t'] : 30).' de zile:</h3>
<div style="margin: -10px 0 10px;">(pentru o factura noua, adauga in ordine:
<span class="wp-crm-popup-control"><img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" /> persoana</span><div class="wp-crm-popup">
<form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_person" value="1" />
<table class="widefat">
	<tr><td colspan="2" style="color: #c00; text-align: justify;">Foloseste formularul de mai jos pentru a adauga o persoana in baza noastra de date. Importante sunt <strong>Numele</strong>, <strong>Prenumele</strong>, <strong>Adresa de email</strong> si <strong>CNP-ul</strong>. Daca nu ai CNP-ul, foloseste Generatorul de CNP din dreapta sus.<br /><strong>Nu adauga persoane cu un CNP la intamplare! S-ar putea sa apara dubluri!</strong> </td></tr>
	<tr><th>Nume</th><td><input type="text" name="wp_crm_quick_add_person_last" value="" class="widefat" /></td></tr>
	<tr><th>Prenume</th><td><input type="text" name="wp_crm_quick_add_person_first" value="" class="widefat" /></td></tr>
	<tr><th>CNP</th><td><input type="text" name="wp_crm_quick_add_person_uin" value="" class="widefat" /></td></tr>
	<tr><th>Adresa</th><td><input type="text" name="wp_crm_quick_add_person_address" value="" class="widefat" /></td></tr>
	<tr><th>Judet</th><td><input type="text" name="wp_crm_quick_add_person_county" value="" class="widefat" /></td></tr>
	<tr><th>EMail</th><td><input type="text" name="wp_crm_quick_add_person_email" value="" class="widefat" /></td></tr>
	<tr><th>Telefon</th><td><input type="text" name="wp_crm_quick_add_person_phone" value="" class="widefat" /></td></tr>
	<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_add_person" value="Adauga" class="wp-crm-ajax-form" /></td></tr>
</table>
</form>
</div> &gt; <span class="wp-crm-popup-control"><img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" /> companie</span><div class="wp-crm-popup">
<form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_company" value="1" />
<table class="widefat">
	<tr><td colspan="2" style="color: #c00; text-align: justify;">Foloseste formularul de mai jos pentru a adauga o noua companie. Campurile esentiale sunt <strong>Nume</strong> si <strong>CUI</strong>. Restul sunt optionale, dar bine de completat.</td></tr>
	<tr><th>Companie</th><td><input type="text" name="wp_crm_quick_add_company_name" value="" class="widefat" /></td></tr>
	<tr><th>CUI</th><td><input type="text" name="wp_crm_quick_add_company_uin" value="" class="widefat" /></td></tr>
	<tr><th>Reg. Com.</th><td><input type="text" name="wp_crm_quick_add_company_rc" value="" class="widefat" /></td></tr>
	<tr><th>Adresa</th><td><input type="text" name="wp_crm_quick_add_company_address" value="" class="widefat" /></td></tr>
	<tr><th>Judet</th><td><input type="text" name="wp_crm_quick_add_company_county" value="" class="widefat" /></td></tr>
	<tr><th>Banca</th><td><input type="text" name="wp_crm_quick_add_company_bank" value="" class="widefat" /></td></tr>
	<tr><th>Cont</th><td><input type="text" name="wp_crm_quick_add_company_account" value="" class="widefat" /></td></tr>
	<tr><th>Telefon</th><td><input type="text" name="wp_crm_quick_add_company_" value="" class="widefat" /></td></tr>
	<tr><th>Fax</th><td><input type="text" name="wp_crm_quick_add_company_fax" value="" class="widefat" /></td></tr>
	<tr><th>EMail</th><td><input type="text" name="wp_crm_quick_add_company_email" value="" class="widefat" /></td></tr>
	<tr><td colspan="2" align="center"><input type="button" name="" value="Adauga" class="wp-crm-ajax-form" /></td></tr>
</table>
</form>
</div> &gt; <span class="wp-crm-popup-control"><img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" /> factura noua</span><div class="wp-crm-popup">
<form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_invoice" value="1" />
<table class="widefat">
	<tr><td colspan="2" style="color: #c00; text-align: justify;">Foloseste formularul de mai jos pentru a adauga o noua factura. Campul <strong>Delegat</strong> este optional. In cazul persoanelor fizice, completeaza-l cu acelasi CNP ca si <strong>Cumparator</strong>, in cazul persoanelor juridice completeaza la <strong>Cumparator</strong> CUI-ul firmei.<br /><strong>ATENTIE! Atat firmele cat si persoanele prezente pe factura trebuie adaugate in baza de date anterior emiterii facturii.</strong><br /><strong>Factura emisa in acest fel este proforma! Ea devine fiscala in momentul achitarii partiale sau integrale!</strong></td></tr>
	<tr><th>Emitent</th><td><select name="wp_crm_quick_add_invoice_seller" class="widefat">';

	$companies = new WP_CRM_List ('companies', array('flags>0'));
	foreach (($companies->get()) as $company)
		$out .= '<option value="'.$company->get().'">'.$company->get('name').'</option>';

	$out .= '</select></td></tr>
	<tr><th>Cumparator</th><td><input type="text" name="wp_crm_quick_add_invoice_buyer" value="" class="widefat" /></td></tr>
	<tr><th>Delegat</th><td><input type="text" name="wp_crm_quick_add_invoice_delegate" value="" class="widefat" /></td></tr>
	<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_add_invoice" value="Adauga" class="wp-crm-ajax-form" /></td></tr>
</table>
</form>
</div>
)</div>';

	$wp_crm_invoices = new WP_CRM_List ('invoices', array ('mine','when' => ($_GET['t'] ? intval($_GET['t']) : 30) .' days ago', 'sort' => 'time desc'));

	$rows = array ();
	$count = 1;
	foreach (($wp_crm_invoices->get()) as $invoice) {
		if (($invoice->get('id') == $_POST['wp_crm_quick_invoice']) && $_POST['wp_crm_quick_pay']) {
			$request = true;
			# prevent double payment
			$_POST['wp_crm_quick_invoice'] = null;
			$_POST['wp_crm_quick_pay'] = null;
			$date = strtotime($_POST['wp_crm_quick_paiddate']);
			$amount = $_POST['wp_crm_quick_paidamount'] ? floatval($_POST['wp_crm_quick_paidamount']) : $invoice->get('value');

			$invoice->set('discount', $_POST['wp_crm_quick_discount'] ? TRUE : FALSE);
			$invoice->set('date', strtotime($_POST['wp_crm_quick_invoicedate']));

			#$invoice->set('advance', $_POST['wp_crm_quick_advance'] ? TRUE : FALSE);	
			$invoice->pay (array (
				'paid by' => $_POST['wp_crm_quick_paidby'],
				'paid value' => $amount,
				'paid date' => $date,
				'paid details' => $_POST['wp_crm_quick_paiddetails'],
				));
			}

		if (($invoice->get('id') == $_POST['wp_crm_quick_invoice']) && $_POST['wp_crm_quick_buyer']) {
			$request = true;
			if (strlen($_POST['wp_crm_quick_buyer_uin']) == 13)
				$buyer = new WP_CRM_Person (intval($_POST['wp_crm_quick_buyer_uin']));
			else
				$buyer = new WP_CRM_Company ($_POST['wp_crm_quick_buyer_uin']);

			$buyer = new WP_CRM_Buyer ($buyer);

			print_r($buyer);
			die ();
			}

		$icons = '';
		$products = $invoice->get('products');
		$source = $invoice->get('source');
		if (class_exists ('WP_AFL_Affiliate')) $affiliate = new WP_AFL_Affiliate ((int) $invoice->get('affiliate'));

		if (!empty($products))
			foreach ($products as $product)
				$icons .= '<div style="float: left;" class="wp-crm-product-icon-'.strtolower($product['product']->get('icon')).'">'.$product['product']->get('icon').'</div>';

		$rows[] = array (
			($count++),
			'<img src="' . WP_CRM_URL . '/icons/delete.png" alt="" class="wp-crm-popup-ajax" rel="invoice_delete-'.$invoice->get('id').'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.
			'<img src="' . WP_CRM_URL . '/icons/email.png" alt="" class="wp-crm-popup-ajax" rel="send_email-'.$invoice->get('id').'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>',
			'<a href="' . WP_CRM_URL . '/ajax/actions/invoice.php?i='.$invoice->get('id').'&r='.rand(1,100).'" target="_blank">'.$invoice->get('invoice_series').str_pad($invoice->get('invoice_number'), 3, 0, STR_PAD_LEFT).'</a>',
			'<img src="' . WP_CRM_URL . '/icons/edit.png" alt="" class="wp-crm-popup-ajax" rel="invoice_date-'.$invoice->get('id').'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.date('d-m-Y', $invoice->get('date')),
			$invoice->is('paid') ? ('<img src="' . WP_CRM_URL . '/icons/edit.png" alt="" class="wp-crm-popup-ajax" rel="invoice_paiddate-'.$invoice->get('id').'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.date('d-m-Y', $invoice->get('paid date'))) : 'n/a',
			$icons.'<img src="' . WP_CRM_URL . '/icons/edit.png" alt="" class="wp-crm-popup-ajax" rel="invoice_products-'.$invoice->get('id').'" /><div class="wp-crm-popup"></div>',
			'<a href="/wp-admin/admin.php?page=wp_crm_history&client='.$invoice->buyer->get('uin').'"><img src="' . WP_CRM_URL . '/icons/call.png" alt="" title="" /></a>'.
			'<img src="' . WP_CRM_URL . '/icons/arrow.png" alt="" class="wp-crm-popup-ajax" rel="invoice_buyer-'.$invoice->get('id').'" /><div class="wp-crm-popup"></div>'.
			(is_object($invoice->buyer) ? ('<img src="' . WP_CRM_URL . '/icons/edit.png" alt="" class="wp-crm-popup-ajax" rel="invoice_'.$invoice->buyer->get('type').'-'.$invoice->buyer->get().'" />'.ucwords($invoice->buyer->get('name'))) : 'N/A').
'<div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>',
			$invoice->get('affiliate') ?
			'<img src="http://www.gravatar.com/avatar/'.$affiliate->get('mail hash').'?s=16&f=y" alt="'.$affiliate->get().'" title="'.$affiliate->get().'" />' : 
			('<img src="' . WP_CRM_URL . '/icons/src/' . strtolower($source['src']) . '.png" alt="'.($source['data']['word'].$source['data']['url']).'" title="'.($source['data']['word'].$source['data']['url']).'" rel="" />'),
			'<img src="' . WP_CRM_URL . '/icons/view.png" alt="" class="wp-crm-popup-ajax" rel="invoice_participants-'.$invoice->get('id').'" /><div class="wp-crm-popup"></div>',
			$invoice->is('partial paid') ? ('<strike>'.$invoice->get('paid value').'</strike> '.($invoice->get('value') - $invoice->get('paid value'))) : $invoice->get('value'),
			'<input type="checkbox" class="wp-crm-ajax-bin" name="wp_crm_invoice_discount-'.$invoice->get('id').'" value="" '.($invoice->is('discounted') ? 'checked ' : '').'/>',
			($invoice->is('paid') ? ($invoice->is('partial paid') ? '<span style="color: #fc0;" class="wp-crm-popup-ajax" rel="invoice_payment-'.$invoice->get('id').'">Da, partial</span>' : '<span style="color: #0c0;" class="wp-crm-popup-ajax" rel="invoice_payment-'.$invoice->get('id').'">Da</span>') : '<span style="color: #c00;" class="wp-crm-popup-ajax" rel="invoice_payment-'.$invoice->get('id').'">Nu</span>').'<div class="wp-crm-popup" style="position: absolute; width: 280px; right: 30px;"></div>');
		}
	
	$cols = array (
		'#',
		'@',
		'PDF',
		'Data Factura',
		'Data Platii',
		'Produse',
		'Cumparator',
		'Src',
		'#P',
		'lei',
		'D?',
		'P?',
		);
	
	$out .= wp_crm_display_table ($cols, $rows, array('class' => 'widefat wp-crm-table wp-crm-raised nofooter'));
	
	if ($request)
		echo '<h2>Bine te-am gasit, '.$current_user->display_name.'!</h2><p>Modificarile au fost operate. Te rog sa apesi butonul de mai jos pentru a reincarca pagina. Multumesc!</p><p><a href="'.$_SERVER['REQUEST_URI'].'" class="button-secondary">Reincarca pagina!</a></p>';
	else
		echo $out;
	}

function wp_crm_generate_invoice ($company, $client, $products, $echo = FALSE) {
	$out = '';

	$out .= wp_crm_display_table (array (
		'N#',
		'Denumire produse si servicii',
		'UM',
		'Cantitatea',
		'Pret unitar<br/>fara TVA(lei)',
		'Valoare (lei)',
		'TVA (lei)'
		), $products);

	$value = 0;
	$vat = 0;
	foreach ($products as $product) {
		$product_value = intval($product[3])*intval($product[4]);
		$product_vat = $product_value * $product[5] * 0.01;
		$value += $product_value;
		$vat += $product_vat;
		}

	

	if ($echo) echo $out;
	return $out;
	}

function wp_crm_generate_receipt ($invoice, $echo = FALSE) {
	$out = '';
	if ($echo) echo $out;
	return $out;
	}

function wp_crm_invoice_parse_data () {
	$client = array();
	return empty($client) ? FALSE : $client;
	}

function wp_crm_invoice_parse_products () {
	$cart = array();
	$num = 1;
	foreach ($_POST as $key => $val) {
		if (strpos($key, 'product-') !== FALSE) {
			$id = intval(str_replace('product-','',$key));
			$cart[] = array (
				$num++,
				$_POST['product-'.$id],
				'buc',
				$_POST['quantity-'.$id],
				$_POST['value-'.$id],
				intval($_POST['value-'.$id])*intval($_POST['vat-'.$id])*0.01
				);
			}
		}
	return empty($cart) ? FALSE : $cart;
	}

function wp_crm_get_invoice_products () {
	$basket = new WP_CRM_Basket();
	$fields = array ();

	foreach ($_POST as $key => $val)
		if (preg_match('/^product-([0-9]+)$/', $key, $match))
			$fields[] = $match[1];

	foreach ($fields as $field) {
		if (preg_match('/\[\[([A-z0-9]+)\]\]/', $_POST['product-'.$field], $match)) { // coded product
			$code = $match[1];
			$series = trim(preg_replace('/[^A-Z]+/', '', strtoupper($code)));
			$number = intval(preg_replace('/[^0-9]+/', '', $code));
			$basket->add (new WP_CRM_Product (array ('series' => $series, 'number' => $number)), $_POST['quantity-'.$field]);
			}
		else
		$basket->add (new WP_CRM_Product (array(
			'name' => $_POST['product-'.$field],
			'price' => $_POST['value-'.$field],
			'vat' => $_POST['vat-'.$field]
			)), $_POST['quantity-'.$field]);
		}

	return $basket;
	}

function wp_crm_get_invoice_participants () {
	$fields = array ();
	$participants = array ();
	foreach ($_POST as $key => $val)
		if (preg_match('/^participant-uin-([0-9]+)$/', $key, $match))
			$fields[] = $match[1];

	foreach ($fields as $field) {
		$participants[] = new WP_CRM_Person ( array (
			'uin' => $_POST['participant-uin-'.$field],
			'name' => $_POST['participant-name-'.$field],
			'id_series' => $_POST['participant-id-series-'.$field],
			'id_number' => $_POST['participant-id-number-'.$field],
			'phone' => $_POST['participant-phone-'.$field],
			'email' => $_POST['participant-email-'.$field],
			));
		}

	return $participants;
	}

function wp_crm_invoices () {
	$out .= '<h3>Facturi fiscale din ultima luna: </h3>';

	$wp_crm_invoices = new WP_CRM_List ('invoices', array ('mine', 'real', 'when' => 'last month', 'sort' => 'series desc'));

	$rows = array ();
	$count = 1;
	foreach (($wp_crm_invoices->get()) as $invoice) {
		if ($invoice->get('invoice_number') < 200 && $invoice->get('invoice_series') == 'EXT') continue;
		$rows[] = array (
			$count++,
			'<a href="' . WP_CRM_URL . '/ajax/actions/invoice.php?i='.$invoice->get('id').'" target="_blank">'.$invoice->get('invoice_series').str_pad($invoice->get('invoice_number'), 3, 0, STR_PAD_LEFT).'</a>',
			date('d-m-Y', $invoice->get('date')),
			$invoice->buyer->get('name'),
			'',
			'',
			'<img src="' . WP_CRM_URL . '/icons/email.png" alt="" title="" class="wp-crm-popup-control" /><div class="wp-crm-popup"><form action="" method="post"><input type="hidden" name="wp_crm_quick_confirm_invoice" value="1" />
<table class="widefat">
<tr><th>Destinatar</th><td><input type="text" value="" name="wp_crm_quick_confirm_invoice_rx" class="widefat" /></td></tr>
<tr><th>Expeditor</th><td><input type="text" value="" name="wp_crm_quick_confirm_invoice_tx" class="widefat" /></td></tr>
<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_confirm_invoice" value="Confirma" class="wp-crm-ajax-form" /></td></tr>
</table></div>',
			$invoice->is('partial paid') ? ('<strike>'.$invoice->get('paid value').'</strike> '.($invoice->get('value') - $invoice->get('paid value'))) : $invoice->get('value'),
			$invoice->is('paid') ? ($invoice->is('partial paid') ? '<span style="color: #fc0;">Da, partial</span>' : '<span style="color: #0c0;">Da</span>') : '<span style="color: #c00;">Nu</span>',
			);
		}
	
	$cols = array (
		'#',
		'PDF',
		'Data',
		'Cumparator',
		'Produse',
		'Participanti',
		'Confirma',
		'Valoare',
		'Platita?',
		);
	
	$out .= wp_crm_display_table ($cols, $rows, array('class' => 'widefat wp-crm-table wp-crm-raised nofooter'));
	echo $out;
	}

function wp_crm_receipts () {
	$time = strtotime('last month', strtotime(date('01-m-Y')));
	$out .= '<h2>Chitante luna precedenta ('.date('m/Y', $time).')</h2>';
	$wp_crm_receipts = new WP_CRM_List ('receipts', array ('month' => $time));

	$rows = array ();

	if (!$wp_crm_receipts->is('empty')) {
		$wp_crm_receipts->sort ('date');
		$c = 1;
		foreach (($wp_crm_receipts->get()) as $receipt) {
			$rows[] = array (
				'<input type="checkbox" name="wp_crm_receipt_'.$receipt->get().'" value="1" class="wp-crm-receipts" />',
				$c++,
				date('d-m-Y H:i', $receipt->get('stamp')),
				$receipt->get('code'),
				$receipt->get('invoice')->buyer->get('name'),
				$receipt->get('value'),
				);
			}
		}

	$cols = array (
		'<input type="checkbox" name="wp_crm_receipt_all" value="1" class="wp-crm-receipts-all" />',
		'#',
		'Data',
		'Serie',
		'Cumparator',
		'Valoare',
		);

	$out .= wp_crm_display_table ($cols, $rows, array ('class' => 'widefat wp-crm-table wp-crm-raised nofooter'));
	echo $out;
	}

function wp_crm_persons () {
	$filter = array ();
	if ($_GET['person_uin']) $filter = array('uin=\''.$_GET['person_uin'].'\'');
	$wp_crm_list = new WP_CRM_List ('persons', $filter);

	$out = '';
	$cols = array('#', 'Name', 'E-mail', 'UIN', 'Phone','G.','A.','Birthday','Products', 'Invoices');
	$rows = array();
	$birthday = array();

	$num = 1;

	$stats = array (
		'M' => 0,
		'F' => 0,
		'age' => 0,
		'products' => 0,
		);
	
	foreach (($wp_crm_list->get()) as $wp_crm_person) {
		if (!$wp_crm_person->get('gender')) continue;
		$wp_crm_icons = $wp_crm_person->get('products icons'); # xxxxxxx
		$icons = '';
		if (!empty($wp_crm_icons))
			foreach ($wp_crm_icons as $icon)
				$icons .= '<div class="wp-crm-product-icon-'.strtolower($icon).'">'.$icon.'</div>';

		$wp_crm_invoices = $wp_crm_person->get('invoices');
		$invoices = array ();
		if (!empty($wp_crm_invoices))
			foreach ($wp_crm_invoices as $invoice)
				$invoices[] = '<a href="'.WP_CRM_URL.'/ajax/actions/invoice.php?i='.($invoice['invoice']->get('id')).'&r='.rand(0,100).'" target="_blank">'.$invoice['invoice']->get('invoice_series').$invoice['invoice']->get('invoice_number').'</a>';
		if (!empty($invoices)) $invoices = implode ('<br />', $invoices); else $invoices = 'N/A';

		$row = array (
			$num++,
			'<img src="' . WP_CRM_URL . '/icons/delete.png" alt="" class="wp-crm-popup-ajax" rel="person_delete-'.$wp_crm_person->get().'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.
			'<img rel="person_edit-'.$wp_crm_person->get('uin').'" class="wp-crm-popup-ajax" alt="" title="" src="'.WP_CRM_URL.'/icons/edit.png" /><div class="wp-crm-popup"></div>'.$wp_crm_person->get('name'),
			$wp_crm_person->get('email'),
			$wp_crm_person->get('uin'),
			$wp_crm_person->get('phone'),
			$wp_crm_person->get('gender'),
			$wp_crm_person->get('age'),
			date('d/m/Y', $wp_crm_person->get('birthday')),
			'<a href="'.add_query_arg('person_uin', $wp_crm_person->get('uin'), $_SERVER['REQUEST_URI']).'">'.$icons.'</a>',
			$invoices,
			);

		$stats['M'] += $wp_crm_person->get('gender') == 'M' ? 1 : 0;
		$stats['F'] += $wp_crm_person->get('gender') == 'F' ? 1 : 0;
		$stats['age'] = ($stats['age'] * ($num - 1) + $wp_crm_person->get('age')) / $num;
		$stats['products'] = ($stats['products'] * ($num - 1) + count($wp_crm_icons)) / $num;

		$rows[] = $row;
		if (!$wp_crm_person->get('happy_birthday')) continue;
		$row[0] = '*';
		$birthday[] = $row;
		}
	if (!empty($birthday) && !$_GET['person_uin']) {
		$out .= '<h3>Clienti nascuti astazi</h3>';
		$out .= wp_crm_display_table ($cols, $birthday);
		$out .= '<hr />';
		}
	$out .= '<h3>Clienti '.get_bloginfo('name').'</h3>';
	$out .= '<p>Exporta lista de clienti platitori in <a href="' . WP_CRM_URL . '/ajax/search/export.php?w=paying_customers">format CSV</a>.</p>';
	$out .= '<p>Statistici: '.$stats['M'].' Barbati / '.$stats['F'].' Femei / Media de varsta '.round($stats['age']).' ani / Din '.ceil(1/(1-1/$stats['products'])).' clienti, unul merge la doua cursuri</p>';
	$out .= wp_crm_display_table ($cols, $rows);
	if ($_GET['person_uin']) {
		if ($_GET['action'] == 'edit') {
			$out .= '<form action="" method="post">';
			$out .= '<table>';
			$out .= '<tr><td>Name</td><td><input type="text" value="" name="wp-crm-client-name" /></td></tr>';
			$out .= '<tr><td>E-Mail</td><td><input type="text" value="" name="wp-crm-client-email" /></td></tr>';
			$out .= '<tr><td>UIN</td><td><input type="text" value="" name="wp-crm-client-uin" /></td></tr>';
			$out .= '<tr><td>Phone</td><td><input type="text" value="" name="wp-crm-client-phone" /></td></tr>';
			$out .= '<tr><td>Company</td><td><input type="text" value="" name="wp-crm-client-company" /></td></tr>';
			$out .= '</table>';
			$out .= '</form>';
			}
		else {
			$cols = array('N#','Cod Curs','Name','Invoice','Registration Date');
			$rows = array();
			$num = 0;
			foreach ($wp_crm_products as $wp_crm_product) {
				$invoice = $wp_crm_person->get('invoice', $wp_crm_product['product']->get('current code'));
				$num++;
				$rows[] = array (
					$num,
					$wp_crm_product['product']->get('current code'),
					$wp_crm_product['product']->get('name'),
					$invoice->get('invoice_series').$invoice->get('invoice_number'),
					date('d/m/Y', $wp_crm_product['stamp'])
					);
				
				}
			$out .= '<hr />';
			$out .= '<h3>Cursuri</h3>';
			$out .= wp_crm_display_table ($cols, $rows);
			}
		}
	echo $out;
	}

function wp_crm_products () {
	$out = '';
	if ($_GET['product']) {
		$product = new WP_CRM_Product ($_GET['product']);

		$out .= '<h2>Planificare &laquo;'.$product->get('nice name').'&raquo;:</h2>';
		$out .= 'Adauga <span class="wp-crm-popup-control"><img src="' . WP_CRM_URL . '/icons/add.png" alt="" title="" /> o noua sesiune</span><div class="wp-crm-popup"><form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_product_instance" value="'.$product->get().'" />
<table class="widefat">
	<tr>
		<th>Data: </th>
		<td><input class="widefat" type="text" name="wp_crm_quick_add_product_instance_date" value="'.date('d-m-Y H:i').'" /></td>
	</tr>
	<tr>
		<td align="center" colspan="2"><input type="button" name="wp_crm_quick_add_product_instance" value="Adauga!" class="wp-crm-ajax-form wp-crm-button-primary" /></td>
	</tr>
</table>
</form>
</div><br /><br />';
		
		$plans = $product->get('planning');

		$c = 0;
		$rows = array ();
		foreach ($plans as $code => $stamp) {
			$location = new WP_CRM_Location ($product->get('location', $code));
			$trainer = new WP_CRM_Trainer ($product->get('trainer', $code));
			$responsible = new WP_CRM_Responsible ($product->get('responsible', $code));
			$company = new WP_CRM_Company ($product->get('company', $code));
			$rows[] = array (
				($c++).'.',
				'<div class="wp-crm-product-icon-'.strtolower(substr($code,0,3)).'">'.substr($code,0,3).'</div>',
				'<input type="checkbox" name="wp_crm_instance_toggle-'.$code.'" class="wp-crm-ajax-bin wp-crm-bin-radio" value="" '.($product->active($code) ? ' checked' : '').'/>',
				'<a href="'.add_query_arg('product', $code, admin_url('admin.php?page=wp_crm_product_resources')).'"><img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" /></a>',
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_structure-'.$code.'" /><div class="wp-crm-popup"></div>',
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_cnfpa-'.$code.'" /><div class="wp-crm-popup"></div>'.$product->get('corno', $code),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_name-'.$code.'" /><div class="wp-crm-popup"></div>'.$product->get('nice name', $code),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_price-'.$code.'" /><div class="wp-crm-popup"></div>'.$product->get('price', $code),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_vat-'.$code.'" /><div class="wp-crm-popup"></div>'.$product->get('vat', $code),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_fullprice-'.$code.'" /><div class="wp-crm-popup"></div>'.$product->get('full price', $code),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_date-'.$code.'" /><div class="wp-crm-popup"></div>'.date ('d-m-Y H:i', $stamp),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_company-'.$code.'" /><div class="wp-crm-popup"></div> '.$company->get('invoice_series'),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_location-'.$code.'" /><div class="wp-crm-popup"></div> '.$location->get('name'),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_trainer-'.$code.'" /><div class="wp-crm-popup"></div> '.$trainer->get('name'),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_responsible-'.$code.'" /><div class="wp-crm-popup"></div> '.$responsible->get('nice name'),
				);
			}

		$cols = array (
			'#',
			'ID',
			'<a name="" title="Activ?">A?</a>',
			'<a name="" title="Resurse">R.</a>',
			'<a name="" title="Structura pe zile">@</a>',
			'CNFPA',
			'Curs',
			'Price',
			'VAT',
			'Full Price',
			'Data',
			'Companie',
			'Locatie',
			'Trainer',
			'Responsabil',
			);

		$out .= wp_crm_display_table ($cols, $rows, array ('class' => 'widefat wp-crm-table wp-crm-raised nofooter'));

		$out .= '<div style="text-align: center; padding: 10px 0;"><script type="text/javascript" src="'.WP_CRM_URL.'/scripts/swfobject.js"></script><script type="text/javascript">
swfobject.embedSWF("'.WP_CRM_URL.'/libs/open-flash-chart.swf", "wp-crm-product-participants-chart", "550", "200","9.0.0", "expressInstall.swf",{"data-file":"'.WP_CRM_URL.'/ajax/stats/product.php?p='.$product->get().'"} );
</script><div id="wp-crm-product-participants-chart"></div></div>';
		}
	elseif ($_GET['calendar']) {
		$time = strtotime($_GET['calendar']);
		$time = strtotime(date('Y-m-01', $time));
		$rows = array ();
		$days = array ();
		for ($c = $time; date('m',$c) == date('m',$time); $c+=86400) {
			while (count($days) + 1 < date('N', $c)) $days[] = 'x';
			$days[] = date('d', $c);
			if (date('N', $c) == 7) { $rows[] = $days; $days = array(); }
			}
		if (count($days) < 7) {
			while (count($days) < 7) $days[] = 'x';
			$rows[] = $days;
			}
		$cols = array ( 'L', 'M', 'M', 'J', 'V', 'S', 'D' );
		$out .= wp_crm_display_table ($cols, $rows);
		}
	else {
		$out = '<h2>Administrare produse:</h2>';
		$out .= 'Adauga <span class="wp-crm-popup-control"><img src="' . WP_CRM_URL . '/icons/add.png" alt="" title="" /> un nou produs</span><div class="wp-crm-popup"><form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_new_product" value="1" />
<table class="widefat">
	<tr>
		<th>Post ID: </th>
		<td><input class="widefat" type="text" name="wp_crm_quick_add_new_product_pid" value="0" /></td>
	</tr>
	<tr>
		<th>Series: </th>
		<td><input class="widefat" type="text" name="wp_crm_quick_add_new_product_series" value="SSSCCT" /></td>
	</tr>
	<tr><td colspan="2">SSS = cod produs / CC = localitate / T = tipul cursului<br /> Dupa adaugare, informatiile se vor modifica folosind optiunea planificare!</td></tr>
	<tr>
		<td align="center" colspan="2"><input type="button" name="wp_crm_quick_add_new_product" value="Adauga!" class="wp-crm-ajax-form wp-crm-button-primary" /></td>
	</tr>
</table>
</form>
</div><br /><br />';
		$wp_crm_products = new WP_CRM_List ('products');
		$wp_crm_products->sort ('time', 'desc');
		$c = 1;
		$rows = array ();
		foreach (($wp_crm_products->get()) as $product) {
			if ($product->is('trash')) continue;

			$rows[] = array (
				($c++).'.',
				'<div class="wp-crm-product-icon-'.strtolower(substr($product->get('current series'),0,3)).'">'.substr($product->get('current series'),0,3).'</div>',
				'<div class="'.((abs($product->get('current stamp') - time()) < 86400) ? 'wp-crm-current-date' : ($product->get('current stamp') < time() ? 'wp-crm-past-date' : 'wp-crm-future-date')).'">'.date('d-m-Y', $product->get('current stamp')).'</div>',
				'<strong>'.$product->get('name').'</strong>',
				'<a href="/wp-admin/admin.php?page=wp_crm_participants&product='.$product->get('current code').'"><img src="' . WP_CRM_URL . '/icons/user.png" /> '.$product->get('participants number').'</a>',
				'<a href="/wp-admin/post.php?action=edit&post='.$product->get().'" target="_blank"><img alt="" title="" src="' . WP_CRM_URL . '/icons/edit.png"> editeaza</a>',
				'<a href="'.add_query_arg('product', $product->get(), $_SERVER['REQUEST_URI']).'"><img src="' . WP_CRM_URL . '/icons/link.png" /> planificare</a>',
				);

			/*
			if (($_POST['wp_crm_product_id'] == $product->get()) && $_POST['wp_crm_product_series'] && $_POST['wp_crm_product_date'])
				$product->plan($_POST['wp_crm_product_series'], $_POST['wp_crm_product_date']);
			if (($_POST['wp_crm_product_id'] == $product->get()) && $_POST['wp_crm_product_responsible'] && $_POST['wp_crm_product_set_responsible'])
				$product->set ('responsible', $_POST['wp_crm_product_responsible']);
			if (($_POST['wp_crm_product_id'] == $product->get()) && $_POST['wp_crm_product_trainer'] && $_POST['wp_crm_product_set_trainer'])
				$product->set ('trainer', $_POST['wp_crm_product_trainer']);

			$out .= '<form action="" method="post">';
			$out .= '<input type="hidden" name="wp_crm_product_id" value="'.$product->get().'" />';
			

			$rows = array ();

			$plans = $product->get('planning');
			if (!empty($plans)) {
				foreach ($plans as $code => $stamp) {
					if ($_POST['wp_crm_product_activate_'.$code]) { $product->activate ($code); }
					if ($_POST['wp_crm_product_deactivate_'.$code]) { $product->deactivate ($code); }
					}
				reset ($plans);
				$count = 1;
				foreach ($plans as $code => $stamp) {
					if ($_POST['wp_crm_product_save_'.$code]) $stamp = $product->modify ($code, $_POST['wp_crm_product_date_'.$code]);
					if ($_POST['wp_crm_product_replan_'.$code]) $stamp = $product->change ($code, $_POST['wp_crm_product_date_'.$code]);
					if ($_POST['wp_crm_product_cancel_'.$code]) { $product->cancel ($code); continue; }


					$rows[] = array (
						$count ++,
						$code,
						'<input name="wp_crm_product_date_'.$code.'" type="text" size="15" value="'.date('d-m-Y H:i', $stamp).'" />',
						'<input name="wp_crm_product_save_'.$code.'" type="submit" value="Save" class="wp-crm-button-primary" /> <input name="wp_crm_product_replan_'.$code.'" type="submit" value="Re-plan" class="wp-crm-button-secondary" /> <input name="wp_crm_product_cancel_'.$code.'" type="submit" value="Cancel" class="wp-crm-button-secondary" />'.($product->active($code) ? '<input name="wp_crm_product_deactivate_'.$code.'" type="submit" value="Deactivate" class="wp-crm-button-secondary" />' : ' <input name="wp_crm_product_activate_'.$code.'" type="submit" value="Activate" class="wp-crm-button-secondary" />'),
						'<a href="/wp-admin/admin.php?page=wp_crm_participants&product='.$code.'">&raquo; Participants</a>',
						);

					}
				}
			$rows[] = array (
				'',
				'<input name="wp_crm_product_series" type="text" size="15" value="" />',
				'<input name="wp_crm_product_date" type="text" size="15" value="'.date('d-m-Y H:i').'" />',
				'<input type="submit" value="Plan" name="wp_crm_product_plan" class="wp-crm-button-primary"/>',
				'',					
				);

			$rows[] = array (
				'',
				'',
				'',
				'<select name="wp_crm_product_responsible" class="widefat"><option value="">Responsabil</option>'.wp_crm_responsible($product->get('responsible')).'</select>',
				'<input type="submit" value="Numeste" name="wp_crm_product_set_responsible" class="wp-crm-button-primary"/>',
				);

			$rows[] = array (
				'',
				'',
				'',
				'<select name="wp_crm_product_trainer" class="widefat"><option value="">Trainer</option>'.wp_crm_trainer($product->get('trainer')).'</select>',
				'<input type="submit" value="Numeste" name="wp_crm_product_set_trainer" class="wp-crm-button-primary"/>',
				);

			$rows[] = array (
				'',
				'',
				'',
				'<select name="wp_crm_product_trainer" class="widefat"><option value="">Locatie</option>'.wp_crm_location($product->get('location')).'</select>',
				'<input type="submit" value="Stabileste" name="wp_crm_product_set_location" class="wp-crm-button-primary"/>',
				);

			$out .= wp_crm_display_table ( array (($c < 10 ? "0$c." : "$c."), '<div class="'.((abs($product->get('current stamp') - time()) < 86400) ? 'wp-crm-current-date' : ($product->get('current stamp') < time() ? 'wp-crm-past-date' : 'wp-crm-future-date')).'">'.date('d-m-Y', $product->get('current stamp')).'</div>', '<div class="wp-crm-product-icon-'.strtolower(substr($product->get('current series'),0,3)).'">'.substr($product->get('current series'),0,3).'</div>', $product->get('name').' <a href="/wp-admin/post.php?action=edit&post='.$product->get().'" target="_blank"><img alt="" title="" src="' . WP_CRM_URL . '/icons/edit.png"></a> <a href="'.add_query_arg('product', $product->get(), $_SERVER['REQUEST_URI']).'"><img src="' . WP_CRM_URL . '/icons/link.png" /></a>'), array (array ('', '', '', wp_crm_display_table ( array ('#', 'Series', 'Date', 'Actions', 'Participanti'), $rows))), array ('class' => 'wp-crm-table nofooter') );
			
			$c++;
			$out .= '</form>';*/
			}
		$cols = array (
			'#',
			'@',
			'Data',
			'Produs',
			'P.',
			'Articol',
			'Administrare',
			);
		$out .= wp_crm_display_table ($cols, $rows);
		}
	echo $out.'<div class="wp-crm-spacer"></div>';
	}

function wp_crm_prices () {
	global $wpdb;
	$out = '';

	$rows = array ();
	$products = new WP_CRM_List ('products', array('active'));
	foreach (($products->get()) as $product) {
		$icon = '<div class="wp-crm-product-icon-'.strtolower($product->get('icon')).'">'.$product->get('icon').'</div>';
		$rows[] = array (
			$icon,
			$product->get('nice name'),
			$product->get('price'),
			$product->get('full price'),
			$product->get('vat'),
			'<img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_price-'.$product->get('current code').'"/><div class="wp-crm-popup"></div>',
			'<img src="'.WP_CRM_URL.'/icons/view.png" alt="" title="" class="wp-crm-popup-ajax" rel="instance_prices-'.$product->get('current code').'"/><div class="wp-crm-popup"></div>',
			);
		}

	$out .= wp_crm_display_table (array ('@', 'Produs', 'Pret', 'Intreg', 'TVA', 'Actiuni', 'Preturi'), $rows);

	echo $out;
	}

function wp_crm_locations () {
	global $wpdb;
	$out = '';

	if ($_POST['wp_crm_location_save']) {
		if ($_POST['wp_crm_location_id'] < 0) {
			$sql = $wpdb->prepare ('insert into `'.$wpdb->prefix.'product_locations` (title,address,map,directions) values (%s,%s,%s,%s);', array (
				$_POST['wp_crm_location_title'],
				$_POST['wp_crm_location_address'],
				$_POST['wp_crm_location_map'],
				$_POST['wp_crm_location_directions'],
				));
			}
		else {
			$sql = $wpdb->prepare ('update `'.$wpdb->prefix.'product_locations` set title=%s,address=%s,map=%s,directions=%s where id=%d;', array (
				$_POST['wp_crm_location_title'],
				$_POST['wp_crm_location_address'],
				$_POST['wp_crm_location_map'],
				$_POST['wp_crm_location_directions'],
				$_POST['wp_crm_location_id'],
				));
			}
		$wpdb->query ($sql);
		$out .= '<div class="updated fade" id="message"><p>Locatia a fost salvat cu succes!</p></div>';
		}

	$out .= '<form action="" method="post"><table class="widefat">
<thead>
	<tr>
		<th colspan="3">Locatii</th>
	</tr>
</thead>
<tbody>
	<tr>
		<th></th>
		<td><select name="wp_crm_location_id" class="widefat">
	<option value="-1">Locatie noua</option>';
	$locations = $wpdb->get_results ('select * from `'.$wpdb->prefix.'product_locations` order by id;');
	if (!empty($locations))
		foreach ($locations as $location)
			$out .= '<option value="'.$location->id.'">'.$location->title.'</option>';
	$out .= '</select></td>
		<td><input type="button" name="" value="Load" class="wp-crm-button-secondary" id="wp-crm-location-load" /></td>
	</tr>
	<tr>
		<th>Locatie:</th>
		<td colspan="2"><input type="text" name="wp_crm_location_title" class="widefat" id="wp-crm-location-title" /></td>
	</tr>
	<tr>
		<th>Adresa:</th>
		<td colspan="2"><input type="text" name="wp_crm_location_address" class="widefat" id="wp-crm-location-address" /></td>
	</tr>
	<tr>
		<th>Harta:</th>
		<td colspan="2"><input type="text" name="wp_crm_location_map" class="widefat" id="wp-crm-location-map" /></td>
	</tr>
	<tr>
		<td colspan="3">';
	$out .= wp_crm_editor ('', 'wp-crm-location-directions', array ('textarea_name' => 'wp_crm_location_directions', 'teeny' => TRUE, 'wpautop' => FALSE), FALSE);
	$out .= '</td>
	</tr>
	<tr>
		<th colspan="3" align="center"><input type="submit" name="wp_crm_location_save" value="Salveaza!" class="wp-crm-button-primary" /></th>
	</tr>
</tbody>
</table>
</form>';
	echo $out;
	}

function wp_crm_participants () {
	global $wpdb;

	if ($_GET['product']) {
		$product_series = preg_replace('/[0-9]+/', '', $_GET['product']);
		$product_number = intval(preg_replace('/[^0-9]+/', '', $_GET['product']));
		$product = new WP_CRM_Product (array( 'series' => $product_series, 'number' => $product_number ));
		}
	else {
		echo '<div class="updated fade"><p align="center">Nu poti vedea participanti fara a selecta o sesiune de curs. Foloseste <a href="/wp-admin/admin.php?page=wp_crm_products">WP Calendar</a> pentru a selecta sesiunea corespunzatoare.</p></div>';
		return;
		}


	if ($_POST['wp_crm_contact_save']) {
		$subject = $_POST['wp_crm_contact_subject'];
		$content = $_POST['wp_crm_contact_message'];
		$stamp = time();
		$wpdb->query ($wpdb->prepare('insert into `'.$wpdb->prefix.'mailtemplate` (subject,content,stamp) values (%s,%s,%d);', $subject, $content, $stamp));
		}

	if ($_POST['wp_crm_contact']) {
		$uins = explode (',', $_POST['wp_crm_contact_uins']);
		$sent = array ();
		$responsible = $product->get('responsible');
		$responsible = get_userdata ($responsible);
		$responsible = explode ("\n", $responsible->user_description);
		$responsible = new WP_CRM_Person (intval($responsible[0]));


		foreach ($uins as $uin) {
			$receiver = new WP_CRM_Person (intval (trim($uin)));
			$email = trim(strtolower($receiver->get('email')));
			if (in_array ($email, $sent)) continue;
			$sent[] = $email;

			$mail = file_get_contents (WP_CRM_Cache . '/template/RO18227600_diploma.txt');	
			$mail = wp_crm_template ($mail, $responsible, 'responsible');
			$mail = wp_crm_template ($mail, $receiver, 'participant');
			$mail = wp_crm_template ($mail, $product, 'product');
			$mail = str_replace ('{participant.title}', $receiver->get('gender') == 'M' ? 'Stimate dl.' : 'Stimata dna.', $mail);

			list ($subject, $content) = explode ("\n", $mail, 2);
			$subject = str_replace ('SUBJECT: ', '', $subject);

			echo $receiver->get('name')."\n";
			wp_crm_mail ($receiver->get('email'), $subject, $content, $attachments, $responsible->get('email'));
#			wp_crm_mail ('bdobrica@gmail.com', $subject, $content, $attachments, $responsible->get('email'));
#			die ();
			}
		}

	$out = '';
	
	$out .= '<h2>Management Participanti '.$product->get('nice name').' ('.$product->get('current code').')</h2>';

	if ($missing_participants = $product->get('missing participants', $product->get('current code'))) {
		$out .= '<p><strong>ATENTIE!</strong> '.($missing_participants == 1 ? 'Un participant lipseste din lista deoarece nu si-a completat datele!' : "$missing_participants participanti lipsesc din lista deoarece nu si-au completat datele!").'</p>';
		$out .= $product->get('missing situation', $product->get('current code'));
		}

	$instances = '';
	$instances .= '<div class="tablenav"><div class="tablenav-pages"><span class="pagination-links">';
	$sessions = $product->get('planning');
	foreach ($sessions as $session => $stamp)
		$instances .= '<a href="'.add_query_arg('product', $session, $_SERVER['REQUEST_URI']).'"'.($_GET['product'] == $session ? ' class="current"' : '').'>' . str_replace($product->get('current series'),'',$session) . '</a>';
	$instances .= '</span></div></div>';
	$out .= $instances;


	$wp_crm_list = new WP_CRM_List ('participants', $product);
	$wp_crm_list->sort ('name');
	$rows = array();
	$count = 1;
	foreach (($wp_crm_list->get()) as $person) {
		#if (!($person->get('email') || $person->get('phone'))) continue;

		if ($_POST['wp_crm_reschedule'] && ($_POST['wp_crm_schedule_uin'] == $person->get('uin'))) {
			if ($_POST['wp_crm_schedule'] != $_GET['product']) {
				$person->move ($_GET['product'], $_POST['wp_crm_schedule']);
				continue;
				}
			}

		$invoice = $person->get('invoice', $_GET['product']);
		$highlight = array ();
		if ($_GET['highlight']) $highlight = explode(';', $_GET['highlight']);
		$rows[] = array (
			'<input type="checkbox" name="wp_crm_participant_'.$person->get().'" value="1" class="wp-crm-persons" />',
			$count++,
			wp_crm_avatar($person->get('email')),
			$person->get('voucher', $_GET['product']) .
			' <img rel="client_edit-'.$person->get('voucher',$_GET['product']).'" class="wp-crm-popup-ajax" alt="" title="" src="'.WP_CRM_URL.'/icons/edit.png" /><div class="wp-crm-popup"></div>',
			'<a href="' . WP_CRM_URL . '/ajax/actions/invoice.php?i='.$invoice->get('id').'&r='.rand(1,100).'" target="_blank">'.$invoice->get('invoice_series').$invoice->get('invoice_number').'</a>',
			'<img rel="person_edit-'.$person->get('uin').'" class="wp-crm-popup-ajax" alt="" title="" src="'.WP_CRM_URL.'/icons/edit.png" /><div class="wp-crm-popup"></div>'.
			(in_array ($person->get('uin'), $highlight) ? '<strong>'.$person->get('name').'</strong>' : $person->get('name')),
			'<a href="/wp-admin/admin.php?page=wp_crm_history&client='.$person->get('uin').'"><img src="' . WP_CRM_URL . '/icons/call.png" alt="" title="" /></a> ',
			$person->get('uin'),
			strtolower($person->get('email')),
			$person->get('phone'),
			$invoice->is('paid') ? '<span style="color: #0c0;">Yes</span>' : '<span style="color: #c00;">No</span>',
			'<form action="" method="post"><input type="hidden" name="wp_crm_schedule_uin" value="'.$person->get('uin').'"><select name="wp_crm_schedule">'.wp_crm_plan($product, $_GET['product']).'</select><input type="submit" name="wp_crm_reschedule" value="Muta" /></form>',
			);
		}
	$cols = array (
		'<input type="checkbox" name="wp_crm_participant_all" value="1" class="wp-crm-persons-all" />',
		'#',
		'',
		'Voucher',
		'Factura',
		'Name',
		'@',
		'CNP',
		'eMail',
		'Phone',
		'Paid?',
		'Group',
		);
	$out .= wp_crm_display_table ($cols, $rows);
	$out .= $instances;

	$out .= '<div class="wp-crm-massactions"><p><strong>Actiuni masive:</strong></p><div style="clear: both;"></div>';
	$out .= '<fieldset><legend>Tipareste</legend>';
	$out .= '<form action="' . WP_CRM_URL . '/ajax/actions/voucher.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="v" id="wp-crm-voucher" /><input type="submit" name="a" value="Voucher" id="wp-crm-voucher-submit"/></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/badge.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="b" id="wp-crm-badge"><input type="hidden" name="s" value="'.$product->get('current code').'" /><input type="submit" name="a" value="Ecuson" id="wp-crm-badge-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/diploma.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="d" id="wp-crm-diploma"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Certificat de Participare" id="wp-crm-diploma-submit" /></form>';
	$out .= '</fieldset>';

	$out .= '<fieldset><legend>Documente Curs</legend>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/opis.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-opis"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Opis si Documente Curs" id="wp-crm-opis-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/attsheet.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-attendance"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Fisa de Prezenta" id="wp-crm-attendance-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/invsheet.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-invoicesheet"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Fisa cu Facturi" id="wp-crm-invoicesheet-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/invoices.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-invoices"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Facturi Cursanti" id="wp-crm-invoices-submit" /></form>';
	$out .= '</fieldset>';
	
	$out .= '<fieldset><legend>Documente CNFPA</legend>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/cnfpa.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-cnfpa"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Diploma CNFPA" id="wp-crm-cnfpa-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/supplement.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-cnfpa-supp"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Supliment CNFPA" id="wp-crm-cnfpa-supp-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/release.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-cnfpa-release"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Borderou CNFPA" id="wp-crm-cnfpa-release-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/participants.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-cnfpa-participants"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Adeverinte CNFPA" id="wp-crm-cnfpa-participants-submit" /></form>';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/contract.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-cnfpa-contract"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Contract si Cereri" id="wp-crm-cnfpa-contract-submit" /></form>';
	$out .= '</fieldset>';

	
	$out .= '<fieldset><legend>Comunicare</legend>';
	$out .= '<input type="button" name="wp_crm_contact_sendmail" value="Trimite e-Mail" id="wp-crm-contact-sendmail" />';
	$out .= '<form action="'. WP_CRM_URL .'/ajax/actions/mailagent.php" target="_blank" method="get" style="display: inline;"><input type="hidden" name="u" id="wp-crm-mailagent"><input type="hidden" name="s" value="'.$product->get('current code').'"><input type="submit" name="a" value="Export CSV Mailagent" id="wp-crm-mailagent-submit" /></form>';
	$out .= '</fieldset>';
	$out .= '<div style="clear: both;"></div></div>';

	$out .= '<div id="wp-crm-contact-container">';
	$out .= '<form action="" method="post">';
	$out .= '<ul>';

	$out .= '<li><label for="">Expeditor:</label><br />';
	$out .= '<select name="wp_crm_contact_sender" class="widefat" style="width: 50%;">';
	$out .= wp_crm_responsible ($product->get('responsible'));
	$out .= '</select></li>';

	$out .= '<li><label for="wp-crm-contact-uins">CNP <span>*</span>: </label><br />';
	$out .= '<input type="text" name="wp_crm_contact_uins" id="wp-crm-contact-uins" value="" style="width: 50%;" />';
	$out .= '</li>';

	$mailtpls = $wpdb->get_results ($wpdb->prepare ('select * from `'.$wpdb->prefix.'mailtemplate` order by stamp desc;'));
	if (!empty($mailtpls)) {
		$out .= '<li><label for="wp-crm-contact-template">Template :</label><br />';
		$out .= '<select name="wp_crm_contact_template" style="width: 50%;">';
		$out .= '<option value="-1">Alege template ...</option>';
		foreach ($mailtpls as $mailtpl)
			$out .= '<option value="'.$mailtpl->id.'">'.$mailtpl->subject.'</option>';
		$out .= '</select><input type="button" name="wp_crm_contact_load" id="wp-crm-contact-load" value="Load" /></li>';
		}	

	$out .= '<li><label for="wp-crm-contact-subject">Subject <span>*</span>: </label><br /><div id="wp-crm-contact-subject"></div></li>';
	$out .= '<li><label for="wp-crm-contact-message">Message <span>*</span>:</label><br />';
	$out .= '<div id="wp-crm-contact-message" style="width: 50%;"></div></li>';
	$out .= '</ul>';
	$out .= '<input type="submit" name="wp_crm_contact_save" value="Save" />';
	$out .= '<input type="submit" name="wp_crm_contact" value="Send" />';
	$out .= '</form>';
	$out .= '</div><div style="height: 800px;"></div>';
	echo $out;
	}

function wp_crm_history () {
	global $current_user;
	$out = '';
	$current_user = wp_get_current_user();
	$client = $_GET['client'];
	if (wp_crm_detect_person($client) == 'person')
		$client = new WP_CRM_Person ($client);
	else
		$client = new WP_CRM_Company (array ('uin' => $client));
	

	$out .= '<div style="float: right;"><span class="wp-crm-popup-ajax" rel="search_person"><img src="'.WP_CRM_URL.'/icons/search.png" alt="" title=""> persoana</span><div class="wp-crm-popup"></div>
<span class="wp-crm-popup-ajax" rel="search_company"><img src="'.WP_CRM_URL.'/icons/search.png" alt="" title=""> companie</span><div class="wp-crm-popup"></div></div>';
	$out .= '<table style="width: 100%;">
	<tr>
		<td style="width: 50%;" valign="top">
<form action="" method="post">
<input type="hidden" name="wp_crm_event_add" value="1" />
<table class="widefat">
	<thead>
		<tr>
			<th colspan="2">Adauga interactiune:</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>Client: </th><td><input type="text" name="wp_crm_event_client" class="widefat" value="'.(is_object($client) ? $client->get('uin') : '').'" /></td>
		</tr>
		<tr>
			<th>Client nou: </th><td><input type="radio" name="wp_crm_event_new_client" value="1" id="wp_crm_event_new_client_yes" /><label for="wp_crm_event_new_client_yes">Da</label> <input type="radio" name="wp_crm_event_new_client" value="0" id="wp_crm_event_new_client_no" checked /><label for="wp_crm_event_new_client_no">Nu</label></td>
		</tr>
		<tr>
			<th>Initiator: </th><td><input type="radio" name="wp_crm_event_trigger" value="-1" id="wp_crm_event_trigger_he" checked /><label for="wp_crm_event_trigger_he">Clientul</label> <input type="radio" name="wp_crm_event_trigger" value="'.($current_user->ID).'" id="wp_crm_event_trigger_we" /><label for="wp_crm_event_trigger_we">'.($current_user->display_name).'</label></td>
		</tr>
		<tr>
			<th>Motivatie: </th><td>
			<select name="wp_crm_event_title" class="widefat">
				<option value="-1">Alta situatie decat cele de mai jos:</option>';
	
	$dummy_event = new WP_CRM_Event ();
	$triggers = $dummy_event->get('keys');
	unset ($dummy_event);

	foreach ($triggers as $key => $trigger)
		$out .= '<option value="'.$key.'">'.$trigger.'</option>';
	$out .= '</select>
			</td>
		</tr>
		<tr>
			<th>Curs: </th><td>
			<select name="wp_crm_event_product" class="widefat">
				<option value="-1">Alt produs decat cele de mai jos:</option>';
	$out .= wp_crm_product ();
	$out .= '</select>
			</td>
		</tr>
		<tr>
			<th>Mentiuni: </th><td><textarea name="wp_crm_event_description" class="widefat" rows="5"></textarea></td>
		</tr>
		<tr>
			<td align="center" colspan="2"><input type="button" class="wp-crm-ajax-form wp-crm-button-primary" name="wp_crm_event_add" value="Adauga!" /></td>
		</tr>
	</tbody>
</table>
</form>
		</td>
		<td valign="top">';

	if (is_object($client)) {
		$out .= '<table class="widefat">
	<thead>
		<tr>
			<th colspan="2">'.$client->get('name').'</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Nume:</td><td>'.$client->get('name').'</td>
		</tr>
		<tr>
			<td>Telefon:</td><td>'.$client->get('phone').'</td>
		</tr>
		<tr>
			<td>EMail:</td><td>'.$client->get('email').'</td>
		</tr>
		<tr>
			<td>Produse:</td><td></td>
		</tr>
		<tr>
			<td>Facturi:</td><td></td>
		</tr>
		<tr>
			<td>Persoane:</td><td></td>
		</tr>
		<tr>
			<td>Companii:</td><td></td>
		</tr>
	</tbody>
</table><div style="margin: 5px;"></div>';
		}

	$out .= '<form action="" method="get">
<input type="hidden" name="wp_crm_event_history" value="1" />
<table class="widefat">
	<thead>
		<tr>
			<th colspan="2">Istoric client:</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<input type="text" name="wp_crm_event_client" value="'.(is_object($client) ? $client->get('uin') : '').'" class="widefat" />
				<input type="button" name="wp_crm_event_history" value="Cauta" class="wp-crm-ajax-form wp-crm-ajax-append wp-crm-button-primary" />
			</td>
		</tr>
	</tbody>
</table>
</form></td>
	</tr>
</table>';
	echo $out;
	}

function wp_crm_efficiency () {
	$out = '';

	$begin = $_POST['wp_crm_efficiency_begin'] ? strtotime($_POST['wp_crm_efficiency_begin']) : strtotime('3 months ago');
	$end = $_POST['wp_crm_efficiency_end'] ? strtotime($_POST['wp_crm_efficiency_end']) : time();

	$out .= '<form action="" method="post"><table>';
	$out .= '<tr><th>Interval:</th><td><input type="text" name="wp_crm_efficiency_begin" value="'.date('d-m-Y', $begin).'" /></td><th> - </th><td><input type="text" name="wp_crm_efficiency_end" value="'.date('d-m-Y', $end).'" /></td><td><input type="submit" name="wp_crm_efficiency" value="Modifica" /></td></tr>';
	$out .= '</table></form>';

	$out .= '<table>';
	$out .= '<tr><td>';
	$out .= '<script type="text/javascript" src="'.WP_CRM_URL.'/scripts/swfobject.js"></script><script type="text/javascript">swfobject.embedSWF("'.WP_CRM_URL.'/libs/open-flash-chart.swf", "wp-crm-product-sources-chart", "550", "400","9.0.0", "expressInstall.swf",{"data-file":"'.WP_CRM_URL.'/ajax/stats/sources.php?begin='.$begin.'&end='.$end.'"} );</script><div id="wp-crm-product-sources-chart"></div>';
	$out .= '</td><td>';
	$out .= '<script type="text/javascript" src="'.WP_CRM_URL.'/scripts/swfobject.js"></script><script type="text/javascript">swfobject.embedSWF("'.WP_CRM_URL.'/libs/open-flash-chart.swf", "wp-crm-product-monthly-chart", "550", "200","9.0.0", "expressInstall.swf",{"data-file":"'.WP_CRM_URL.'/ajax/stats/monthly.php?begin='.$begin.'&end='.$end.'"} );</script><div id="wp-crm-product-monthly-chart"></div>';
	$out .= '<script type="text/javascript" src="'.WP_CRM_URL.'/scripts/swfobject.js"></script><script type="text/javascript">swfobject.embedSWF("'.WP_CRM_URL.'/libs/open-flash-chart.swf", "wp-crm-product-daily-chart", "550", "200","9.0.0", "expressInstall.swf",{"data-file":"'.WP_CRM_URL.'/ajax/stats/daily.php?begin='.$begin.'&end='.$end.'"} );</script><div id="wp-crm-product-daily-chart"></div>';
	$out .= '</td></tr>';
	$out .= '<tr><td colspan="2">';
	$out .= '<script type="text/javascript" src="'.WP_CRM_URL.'/scripts/swfobject.js"></script><script type="text/javascript">swfobject.embedSWF("'.WP_CRM_URL.'/libs/open-flash-chart.swf", "wp-crm-product-weekly-chart", "1100", "200","9.0.0", "expressInstall.swf",{"data-file":"'.WP_CRM_URL.'/ajax/stats/weekly.php?begin='.$begin.'&end='.$end.'"} );</script><div id="wp-crm-product-weekly-chart"></div>';
	$out .= '</td></tr>';
	$out .= '</table>';
	

	echo $out;
	}

function wp_crm_companies () {
	$companies = new WP_CRM_List ('companies');
	$c = 1;
	$cols = array ('N#', 'Name', 'V', 'R.C.', 'CUI', 'Phone', 'EMail', 'Actions');
	$rows = array ();
	foreach (($companies->get()) as $company)
		$rows[] = array (
			$c++,
			'<img src="' . WP_CRM_URL . '/icons/delete.png" alt="" class="wp-crm-popup-ajax" rel="company_delete-'.$company->get().'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.
			'<img src="' . WP_CRM_URL . '/icons/edit.png" alt="" class="wp-crm-popup-ajax" rel="company_edit-'.$company->get().'" /><div class="wp-crm-popup" style="position: absolute; width: 280px;"></div>'.
			$company->get('name'),
			'<a href="http://www.vrajitorul.eu/firme/?demo=1&nume='.urlencode($company->get('nice name')).'" target="_blank"><img src="' . WP_CRM_URL . '/icons/link.png" alt="" title="" /></a>',
			$company->get('rc'),
			$company->get('uin'),
			$company->get('phone'),
			$company->get('email'),
			''
			);

	$out = '';
	$out .= wp_crm_display_table ($cols, $rows);
	echo $out;
	}

function wp_crm_product_resources () {
	$out = '';
	if ($_GET['product'])
		$product = new WP_CRM_Product (array ('series' => wp_crm_extract_series($_GET['product']), 'number' => wp_crm_extract_number($_GET['product'])));
	if (!is_object($product)) {
		echo '<div class="updated fade"><p align="center">Nu poti vedea resursele fara a selecta o sesiune de curs.</p></div>';
		return;
		}
	if ($_POST['wp_crm_resource_add']) {
		$resource = new WP_CRM_Resource (array (
			'title' => $_POST['wp_crm_resource_title'],
			'description' => $_POST['wp_crm_resource_description'],
			'value' => (float) $_POST['wp_crm_resource_value'],
			'fees' => $_POST['wp_crm_resource_fees'],
			'type' => $_POST['wp_crm_resource_type'],
			'global' => $_POST['wp_crm_resource_global'] == 'yes' ? 1 : 0
			));
		}

	$out .= '<h2>Resurse '.$product->get('nice name').'</h2>';
	$out .= '<table style="width: 100%;">
	<tr>
		<td style="width: 50%;" valign="top">
			<form action="" method="post">
			<input type="hidden" name="wp_crm_resource_add" value="1" />
			<input type="hidden" name="wp_crm_resource_product" value="'.$product->get('current code').'" />
<table class="widefat">
	<thead>
		<tr>
			<th colspan="2">Adauga Resurse</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>Resursa: </th><td><input type="text" name="wp_crm_resource_title" value="" class="widefat" /></td>
		</tr>
		<tr>
			<th>Tip resursa: </th><td><input type="radio" name="wp_crm_resource_type" value="flat" id="wp-crm-resource-type-flat" /><label for="wp-crm-resource-type-flat">cost fix</label>
<input type="radio" name="wp_crm_resource_type" value="volume" id="wp-crm-resource-type-volume" checked /><label for="wp-crm-resource-type-volume">cost de volum</label>
<input type="radio" name="wp_crm_resource_type" value="step" id="wp-crm-resource-type-step" checked /><label for="wp-crm-resource-type-step">cost cu prag</label>
<input type="text" name="wp-crm-resource-step-low" value="" style="width: 48px;" /> - <input type="text" name="wp-crm-resource-step-high" value="" style="width: 48px;" /> 
</td>
		</tr>
		<tr>
			<th>Valoare unitara (lei): </th><td><input type="text" name="wp_crm_resource_title" value="" class="widefat" /></td>
		</tr>
		<tr>
			<th>Taxe: </th><td>
<input type="radio" name="wp_crm_resource_fees" value="vat" id="wp-crm-resource-fees-vat" checked /><label for="wp-crm-resource-fees-vat">factura cu TVA</label>
<input type="radio" name="wp_crm_resource_fees" value="novat" id="wp-crm-resource-fees-novat" /><label for="wp-crm-resource-fees-novat">factura fara TVA</label>
<input type="radio" name="wp_crm_resource_fees" value="auth" id="wp-crm-resource-fees-auth" /><label for="wp-crm-resource-fees-auth">drepturi de autor</label>
<input type="radio" name="wp_crm_resource_fees" value="trainer" id="wp-crm-resource-fees-trainer" /><label for="wp-crm-resource-fees-trainer">trainer</label>
			</td>
		</tr>
		<tr>
			<th>Resursa globala: </th><td>
<input type="radio" name="wp_crm_resource_global" value="yes" id="wp-crm-resource-global-yes" checked /><label for="wp-crm-resource-global-yes">Da</label>
<input type="radio" name="wp_crm_resource_global" value="no" id="wp-crm-resource-global-no" checked /><label for="wp-crm-resource-global-no">Nu</label>
			</td>
		</tr>
		<tr>
			<th>Descriere: </th><td><textarea name="wp_crm_resource_description" class="widefat" rows="5"></textarea></td>
		</tr>
		<tr>
			<td colspan="2" align="center"><input type="button" name="wp_crm_resource_add" value="Adauga!" class="wp-crm-ajax-form wp-crm-button-primary" /></td>
		</tr>
	</tbody>
</table>
			</form>
		</td>
		<td valign="top">';

	$c = 1;
	$total = 0.0;
	$rows = array ();
	$resources = new WP_CRM_List ('resources', $product);
	if (!$resources->is('empty')) {
		foreach ($resources as $resource) {
			$rows[] = array (
				$c++,
				$resource->get('title'),
				$resource->get('value').' lei',
				$resource->get('cost').' lei',
				);
			$total += $resource->get('cost');
			}
		$rows[] = array ('','','',$total.' lei');
		}

	$cols = array (
		'#',
		'Resursa',
		'Cost',
		'Valoare',
		);

	$out .= wp_crm_display_table ($cols, $rows);

	$out .= '</td>
	</tr>
</table>';
	echo $out;
	}

function wp_crm_product_events () {
	$out = '';
	echo $out;
	} 

function wp_crm_customer_log () {
	global $wpdb;
	$bid = $_COOKIE[WP_CRM_Shop_Cookie];
	$source = $_COOKIE[WP_CRM_Track_Cookie];
	if (is_user_logged_in()) return;
	if (!$bid) return;

	$url = $_SERVER['REQUEST_URI'];
	$referer = $_SERVER['HTTP_REFERER'];
	$get = serialize($_GET);
	$post = serialize($_POST);
	$stamp = time();
	$sql = $wpdb->prepare ('insert into `'.$wpdb->prefix.'customer_history` (bid,stamp,url,get_vars,post_vars,referer,source) values (%d,%d,%s,%s,%s,%s,%s);', $bid, $stamp, $url, $get, $post, $referer, $source);
	$wpdb->query ($sql);
	}

function wp_crm_parameters ($in, $object) {
	$params = array (
		'participant.name'	=> '',
		'participant.first'	=> '',
		'participant.last'	=> '',
		'participant.email'	=> '',
		'participant.phone'	=> '',
		'participant.address'	=> '',

		'invoice.series'	=> '',
		'invoice.number'	=> '',
		'invoice.value'		=> '',
		'invoice.vat'		=> '',
		'invoice.total'		=> '',

		'buyer.name'		=> '',
		'buyer.uin'		=> '',
		'buyer.address'		=> '',
		'buyer.county'		=> '',

		'seller.name'		=> '',
		'seller.uin'		=> '',
		'seller.address'	=> '',
		'seller.county'		=> '',
		);

	if (is_object($object)) {
		switch (get_class($object)) {
			case 'WP_CRM_Person':
				$params['participant.name']	= $object->get('name');
				$params['participant.first']	= $object->get('first_name');
				$params['participant.last']	= $object->get('last_name');
				$params['participant.email']	= $object->get('email');
				$params['participant.phone']	= $object->get('phone');
				$params['participant.addres']	= $object->get('address');
				$params['participant.county']	= $object->get('county');
				break;
			case 'WP_CRM_Invoice':
				$params['invoice.series']	= $object->get('invoice_series');
				$params['invoice.number']	= $object->get('invoice_number');
				$params['invoice.value']	= $object->get('value');
				$params['invoice.vat']		= $object->get('vat');
				$params['invoice.total']	= $object->get('total');
				break;
			case 'WP_CRM_Buyer':
				break;
			}
		}

	return str_replace (array_keys($params), array_values($params), $in);
	}

function wp_crm_mail_templates () {
	global $wpdb;
	$out = '';

	if ($_POST['wp_crm_mail_template_save']) {
		$mid = $wpdb->get_var ($wpdb->prepare ('select id from `wp_mailtemplate` where id=%d;', $_POST['wp_crm_mail_template_id']));
		if ($mid)
			$sql = $wpdb->prepare ('update `wp_mailtemplate` set cid=%d,subject=%s,content=%s,stamp=%d where id=%d;', array (
				$_POST['wp_crm_mail_template_company'],
				$_POST['wp_crm_mail_template_subject'],
				$_POST['wp_crm_mail_template'],
				time(),
				$mid
				));
		else
			$sql = $wpdb->prepare ('insert into `wp_mailtemplate` (cid,subject,content,stamp) values (%d,%s,%s,%d);', array (
				$_POST['wp_crm_mail_template_company'],
				$_POST['wp_crm_mail_template_subject'],
				$_POST['wp_crm_mail_template'],
				time()
				));

		$wpdb->query ($sql);
		$out .= '<div class="updated fade" id="message"><p>Template-ul a fost salvat cu succes!</p></div>';
		}

	$out .= '<form action="" method="post">
<table class="widefat">
<thead>
	<tr>
		<th colspan="3">Mail Template</th>
	</tr>
</thead>
<tbody>
<tr>
<th style="width: 150px;">Companie:</th>
<td colspan="2"><select name="wp_crm_mail_template_company" class="widefat">
	<option value="-1">Valabil pentru toate companiile</option>';

	$companies = new WP_CRM_List ('companies', array('flags>0'));
	foreach (($companies->get()) as $company)
		$out .= '<option value="'.$company->get().'">'.$company->get('name').'</option>';

	$out .= '</select></td>
</tr>
<tr>
<th>Template:</th>
<td>
<select name="wp_crm_mail_template_id" class="widefat">
	<option value="-1">Template Nou</option>';

	$mailtpls = $wpdb->get_results ($wpdb->prepare ('select * from `'.$wpdb->prefix.'mailtemplate` order by stamp desc;'));
	if (!empty($mailtpls))
		foreach ($mailtpls as $mailtpl)
			$out .= '<option value="'.$mailtpl->id.'">'.$mailtpl->subject.'</option>';

	$out .= '</select>
</td>
<td>
<input type="button" name="wp_crm_mail_template_load" id="wp-crm-mail-template-load" value="Load" class="wp-crm-button-secondary" />
</td>
</tr>
<tr>
<th>Subiect:</th>
<td colspan="2"><input type="text" name="wp_crm_mail_template_subject" id="wp-crm-mail-template-subject" class="widefat" /></td>
</tr>
<tr>
<td colspan="3">';
	$out .= wp_crm_editor ('', 'wp-crm-mail-template', array ('textarea_name' => 'wp_crm_mail_template', 'teeny' => TRUE, 'wpautop' => FALSE), FALSE);
	$out .= '
</td>
</tr>
<tr>
<td colspan="3">
<input type="submit" name="wp_crm_mail_template_save" value="Salveaza" class="wp-crm-button-primary" />
</td>
</tr>
</thead>
</table>
</form>';

	echo $out;
	}

function wp_crm_timemanage () {
	$out = '';
	$out .= '<h3>Time Management: </h3>';

	$out .= 'Adauga: <span class="wp-crm-popup-control"><img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" /> o noua arie de interes</span><div class="wp-crm-popup">
<form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_objective" value="1" />
<table class="widefat">
	<tr><th>Arie de interes</th><td><input type="text" name="wp_crm_quick_add_objective_title" value="" class="widefat" /></td></tr>
	<tr><th colspan="2">Descriere</th></tr>
	<tr><td colspan="2"><textarea name="wp_crm_quick_add_objective_description" rows="10" class="widefat"></textarea></td></tr>
	<tr><th>Culoare</th><td>'.wp_crm_colorpick().'</td></tr>
	<tr><th>Importanta</th><td align="center"><input type="hidden" name="wp_crm_quick_add_objective_importance" value="" />'.wp_crm_grade().'</td></tr>
	<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_add_objective" value="Adauga" class="wp-crm-ajax-form" /></td></tr>
</table>
</form></div> <span class="wp-crm-popup-control"><img src="'.WP_CRM_URL.'/icons/add.png" alt="" title="" /> un nou task</span><div class="wp-crm-popup">
<form action="" method="post">
<input type="hidden" name="wp_crm_quick_add_task" value="1" />
<table class="widefat">
	<tr><th>Task</th><td><input type="text" name="wp_crm_quick_add_task_title" value="" class="widefat" /></td></tr>
	<tr><th colspan="2">Descriere</th></tr>
	<tr><td colspan="2"><textarea name="wp_crm_quick_add_task_description" rows="10" class="widefat"></textarea></td></tr>
	<tr><th>Planificat</th><td><input type="text" name="wp_crm_quick_add_task_planned" value="'.date('d-m-Y H:i').'" class="widefat" /></td></tr>
	<tr><th>Deadline</th><td><input type="text" name="wp_crm_quick_add_task_deadline" value="'.date('d-m-Y H:i').'" class="widefat" /></td></tr>
	<tr><th>Responsabil</th><td><select name="wp_crm_quick_add_task_responsible" class="widefat"><option value="0">Alege un responsabil</option>'.wp_crm_responsible().'</select></td></tr>
	<tr><th>Important</th><td align="center"><input type="hidden" name="wp_crm_quick_add_task_importance" value="" />'.wp_crm_grade().'</td></tr>
	<tr><th>Urgent</th><td align="center"><input type="hidden" name="wp_crm_quick_add_task_urgency" value="" />'.wp_crm_grade().'</td></tr>
	<tr><td colspan="2" align="center"><input type="button" name="wp_crm_quick_add_task" value="Adauga" class="wp-crm-ajax-form" /></td></tr>
</table></form></div>';

	$register = new WP_CRM_TM_Register ('tasks');
	$rows = array ();
	$c = 1;
	if ($register->has('tasks')) {
		foreach (($register->get('tasks')) as $task) {
			$rows[] = array (
				($c++).'.',
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" /> '.
				$task->get('importance'),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" /> '.
				$task->get('urgency'),
				'<img src="'.WP_CRM_URL.'/icons/clock.png" alt="" title="" /> '.
				date('H:i', $task->get('deadline')),
				'<img src="'.WP_CRM_URL.'/icons/calendar.png" alt="" title="" /> '.
				date('d-m-Y', $task->get('deadline')),
				'<img src="'.WP_CRM_URL.'/icons/delete.png" alt="" title="" /> '.
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" /> '.
				$task->get('title'),
				'<img src="'.WP_CRM_URL.'/icons/edit.png" alt="" title="" /> '.
				$task->get('responsible')->get('name'),
				);
			}
		$cols = array (
			'#',
			'I',
			'U',
			'hh:mm',
			'dd-mm-yyyy',
			'Task',
			'Responsabil',
			);
		$out .= wp_crm_display_table ($cols, $rows);
		}
	echo $out;
	}

function wp_crm_config () {
	$out = '';
	if ($_POST['wp_crm_upload']) {
		if ($_FILES['wp_crm_invoice_voucher']['size'] > 0) {
			$file = $_FILES['wp_crm_invoice_voucher'];
			$name = 'voucher.jpg';
			}
		if ($_FILES['wp_crm_invoice_back']['size'] > 0) {
			$file = $_FILES['wp_crm_invoice_back'];
			$name = 'invoice_back.pdf';
			}
		if ($_FILES['wp_crm_study_contract_pf']['size'] > 0) {
			$file = $_FILES['wp_crm_study_contract_pf'];
			$name = 'study_contract_phy.docx';
			}
		if ($_FILES['wp_crm_study_contract_pj']['size'] > 0) {
			$file = $_FILES['wp_crm_study_contract_pj'];
			$name = 'study_contract_jur.docx';
			}
		move_uploaded_file ($file['tmp_name'], WP_CRM_Cache . '/template/' . $name);
		}

	if ($_POST['wp_crm_save']) {
		if ($_POST['wp_crm_confirm_partial']) {
			$value = $_POST['wp_crm_confirm_partial'];
			$name = 'tpl.partial.txt';
			}
		if ($_POST['wp_crm_confirm_total']) {
			$value = $_POST['wp_crm_confirm_total'];
			$name = 'tpl.total.txt';
			}
		file_put_contents (WP_CRM_Cache . '/template/' . $name, $value);
		}



	$rows = array ();
	
	$rows[] = array (
		'<strong>Model voucher:</strong>',
		'<form action="" method="post" enctype="multipart/form-data"><input type="file" name="wp_crm_invoice_voucher" /><input type="submit" name="wp_crm_upload" value="Upload" /></form>',
		'<a href=""></a>',
		);
	$rows[] = array (
		'<strong>Spatele facturii:</strong>',
		'<form action="" method="post" enctype="multipart/form-data"><input type="file" name="wp_crm_invoice_back" /><input type="submit" name="wp_crm_upload" value="Upload" /></form>',
		'<a href=""></a>',
		);
	$rows[] = array (
		'<strong>Contract formare PF:</strong>',
		'<form action="" method="post" enctype="multipart/form-data"><input type="file" name="wp_crm_study_contract_pf" /><input type="submit" name="wp_crm_upload" value="Upload" /></form>',
		'<a href=""></a>',
		);
	$rows[] = array (
		'<strong>Contract formare PJ:</strong>',
		'<form action="" method="post" enctype="multipart/form-data"><input type="file" name="wp_crm_study_contract_pj" /><input type="submit" name="wp_crm_upload" value="Upload" /></form>',
		'<a href=""></a>',
		);
	$rows[] = array (
		'<strong>eMail confirmare:</strong>',
		'<form action="" method="post"><textarea name="wp_crm_confirm_total" class="widefat" rows="5"></textarea><input type="submit" name="wp_crm_save" value="Save" /></form>',
		'',
		);
	$rows[] = array (
		'<strong>eMail confirmare:</strong>',
		'<form action="" method="post"><textarea name="wp_crm_confirm_partial" class="widefat" rows="5"></textarea><input type="submit" name="wp_crm_save" value="Save" /></form>',
		'',
		);

	$out .= '<h3>Configurare CRM</h3>';
	$out .= wp_crm_display_table (array (
		'Parametru',
		'Formular',
		'Detalii',
		), $rows);

	echo $out;
	}

function wp_crm_dashboard_widget_display () {
	global $current_user;
	$current_user = wp_get_current_user();
	$out  = '';
	$out .= '<h2>Bine ai venit, '.$current_user->display_name.'!</h2>';
	$products = new WP_CRM_List ('products', array('mine', 'active'));
	$out .= '<p>Ai '.$products->get('count').' cursuri active in acest moment:<ul>'; 
	foreach (($products->get()) as $product) {
		$out .= '<li><a href="/wp-admin/admin.php?page=wp_crm_participants&product='.$product->get('current code').'">'.$product->get('name').'</a></li>';
		}
	$out .= '</ul></p>';
	$out .= '<a href="/wp-admin/admin.php?page=wp_crm" target="_blank">Situatie inscrisi</a>, <a href="/wp-admin/admin.php?page=wp_crm_invoices" target="_blank">Situatie facturi</a>';
	echo $out;
	}

function wp_crm_dashboard_widget_control () {
	}

function wp_crm_dashboard_widget () {
	wp_add_dashboard_widget ('wp_crm_dashboard_widget', 'WP CRM', 'wp_crm_dashboard_widget_display', 'wp_crm_dashboard_widget_control');
	}

function wp_crm_shop_scripts () {
	wp_enqueue_script ('wp-crm-shop', WP_CRM_URL . '/scripts/wp-crm-shop.js', array ('jquery'), '0.5');
	wp_enqueue_style ('wp-crm-shop', WP_CRM_URL . '/style/wp-crm-shop.css', array (), '0.5');
	}

function wp_crm_shop_filter ($text) {
	global $post;
	$product = new WP_CRM_Product (intval($post->ID));
	$company = $product->get ('current company');
	if ($company) $company = new WP_CRM_Company ((int) $company);
	if ($product->errors()) return $text;
	if (!$product->is('active')) return $text;

	//if ($_GET['test'] == 'true') {
	if (1) {
		if (has_post_thumbnail ($post->ID)) {
			$image = wp_get_attachment_image_src (get_post_thumbnail_id ($post->ID), 'single-post-thumbnail');
			$image = $image[0];
			}

		if ($product->get('vat') || (is_object($company) && (!$company->get('default_vat')))) {
			$credentials = '<span class="wp-crm-shop-buy-product-credentials"><img src="' . WP_CRM_URL . '/icons/credentials-extreme.png" /></span>';
			}
		else {
			$credentials = '<span class="wp-crm-shop-buy-product-credentials"><img src="' . WP_CRM_URL . '/icons/credentials-extreme.png" /><img src="' . WP_CRM_URL . '/icons/credentials-mmfps.png" /><img src="' . WP_CRM_URL . '/icons/credentials-mects.png" /><img src="' . WP_CRM_URL . '/icons/credentials-europass.png" /></span>';
			}

		if ($product->get('full price') && ($product->get('full price') != $product->get('value'))) {
			$button = '<div style="background: #fff;" class="wp-crm-shop-buy-product"><div>' . $credentials . '<span class="wp-crm-shop-buy-product-cut">'.$product->get('html full value').' lei</span><span class="wp-crm-shop-buy-product-price">'.$product->get('html value').' lei</span><span class="wp-crm-shop-buy-product-btn"><img src="' . WP_CRM_URL . '/icons/shopcartbtn.png" alt="" title="" /><span>Inscrie-te acum!</span></span></div><a name="buy" rel="'.$product->get('current code').'"></a></div>';
			$inline = '<div class="wp-crm-shop-inline-product"><div' . ($product->get('vat') ? ' style="width: 260px; margin-left: 195px;"' : '') . '>' . $credentials . '<span class="wp-crm-shop-buy-product-cut">'.$product->get('html full value').' lei</span><span class="wp-crm-shop-buy-product-price">'.$product->get('html value').' lei</span><span class="wp-crm-shop-buy-product-btn"><img src="' . WP_CRM_URL . '/icons/shopcartbtn.png" alt="" title="" /><span>Inscrie-te acum!</span></span></div><a name="buy" rel="'.$product->get('current code').'"></a></div>';
			}
		else {
			$button = '<div style="background: #fff;" class="wp-crm-shop-buy-product"><div>' . $credentials . '<span class="wp-crm-shop-buy-product-price">'.$product->get('html value').' lei</span><span class="wp-crm-shop-buy-product-btn"><img src="' . WP_CRM_URL . '/icons/shopcartbtn.png" alt="" title="" /><span>Inscrie-te acum!</span></span></div><a name="buy" rel="'.$product->get('current code').'"></a></div>';
			$inline = '<div class="wp-crm-shop-inline-product"><div' . ($product->get('vat') ? ' style="width: 260px; margin-left: 195px;"' : '') . '>' . $credentials . '<span class="wp-crm-shop-buy-product-price">'.$product->get('html value').' lei</span><span class="wp-crm-shop-buy-product-btn"><img src="' . WP_CRM_URL . '/icons/shopcartbtn.png" alt="" title="" /><span>Inscrie-te acum!</span></span></div><a name="buy" rel="'.$product->get('current code').'"></a></div>';
			}

		#if (!$product->get('vat')) $button .= '<div style="clear: both;"></div>';
		}
	else {
		if ($product->get('full price')) {
			$button = '<div class="wp-crm-shop-product wp-crm-shop-discounted"><span class="wp-crm-shop-product-value">'.$product->get('html value').'</span><span class="wp-crm-shop-product-fullvalue">'.$product->get('html full value').'</span><span class="wp-crm-shop-product-currency">lei</span><span class="wp-crm-shop-product-fullcurrency">lei</span><span class="wp-crm-shop-product-label">Inscrie-te acum!</span><img alt="Inscrie-te acum!" title="Inscrie-te acum!" src="' . WP_CRM_URL . '/icons/lbbredd.png" class="wp-crm-shop-button" rel="'.$product->get('current code').'" /><img src="' . WP_CRM_URL . '/icons/crossed.png" alt="" title="" class="wp-crm-shop-crossed" /></div>';

			$inline = '<div class="wp-crm-shop-product wp-crm-shop-discounted wp-crm-shop-inline"><span class="wp-crm-shop-product-value">'.$product->get('html value').'</span><span class="wp-crm-shop-product-fullvalue">'.$product->get('html full value').'</span><span class="wp-crm-shop-product-currency">lei</span><span class="wp-crm-shop-product-fullcurrency">lei</span><span class="wp-crm-shop-product-label">Inscrie-te acum!</span><img alt="Inscrie-te acum!" title="Inscrie-te acum!" src="' . WP_CRM_URL . '/icons/lbbgreend.png" class="wp-crm-shop-button" rel="'.$product->get('current code').'" /><img src="' . WP_CRM_URL . '/icons/crossed.png" alt="" title="" class="wp-crm-shop-crossed" /></div>';
			}
		else {
			$button = '<div class="wp-crm-shop-product"><span class="wp-crm-shop-product-value">'.$product->get('html value').'</span><span class="wp-crm-shop-product-currency">lei</span><span class="wp-crm-shop-product-label">Inscrie-te acum!</span><img alt="Inscrie-te acum!" title="Inscrie-te acum!" src="' . WP_CRM_URL . '/icons/lbbred.png" class="wp-crm-shop-button" rel="'.$product->get('current code').'" /></div>';

			$inline = '<div class="wp-crm-shop-product wp-crm-shop-inline"><span class="wp-crm-shop-product-value">'.$product->get('html value').'</span><span class="wp-crm-shop-product-currency">lei</span><span class="wp-crm-shop-product-label">Inscrie-te acum!</span><img alt="Inscrie-te acum!" title="Inscrie-te acum!" src="' . WP_CRM_URL . '/icons/lbbgreen.png" class="wp-crm-shop-button" rel="'.$product->get('current code').'" /></div>';
			}
		}


	$text = str_replace ('<!-- buy -->', $inline, $text);

	$closed_tpl = new WP_CRM_Template ('Caseta Curs Inchis');
	$closed_box = '<div class="wp-crm-shop-closed">'.$closed_tpl->get('content').'</div>';

	$text = "<h2><a href=\"".get_permalink($post->ID)."\" title=\"".get_the_title($post->ID)."\">".get_the_title($post->ID)."</a></h2>".$button.$text.$closed_box.$inline;
	return $text;
	}

function wp_crm_gallery_filter ($text) {
	if (($pos = strpos($text, '[gallery-')) === FALSE) return $text;
	$gallery = (int) substr($text, $pos+9, strpos($text, ']', $pos) - $pos - 9);
	$tag = '[gallery-'.$gallery.']';

	$gallery = new WP_CRM_Gallery ($gallery);
	$out = $gallery->out ();
	
	return str_replace ($tag, $out, $text);
	}

function wp_crm_admin_scripts () {
	wp_enqueue_script ('wp-crm', WP_CRM_URL . '/scripts/wp-crm.js', array('jquery'), '0.4');
	wp_enqueue_style  ('wp-crm', WP_CRM_URL . '/style/wp-crm.css', '0.2');
	wp_enqueue_style ('wp-crm-products', WP_CRM_URL . '/style/wp-crm-products.css', array ('wp-crm'), '0.2');
	}

function wp_crm_admin_menu () {
	add_menu_page ('WP CRM', 'WP CRM', 'create_users', 'wp_crm', 'wp_crm');
	add_submenu_page ('wp_crm', 'WP Invoices', 'WP Invoices', 'create_users', 'wp_crm_invoices', 'wp_crm_invoices');
	add_submenu_page ('wp_crm', 'WP Receipts', 'WP Receipts', 'create_users', 'wp_crm_receipts', 'wp_crm_receipts');
	add_submenu_page ('wp_crm', 'WP Calendar', 'WP Calendar', 'create_users', 'wp_crm_products', 'wp_crm_products');
	add_submenu_page ('wp_crm', 'WP Time Manage', 'WP Time Manage', 'create_users', 'wp_crm_timemanage', 'wp_crm_timemanage');
	add_submenu_page ('wp_crm', 'WP Prices', 'WP Prices', 'create_users', 'wp_crm_prices', 'wp_crm_prices');
	add_submenu_page ('wp_crm', 'WP Locations', 'WP Locations', 'create_users', 'wp_crm_locations', 'wp_crm_locations');
	add_submenu_page ('wp_crm', 'WP Contacts', 'WP Contacts', 'create_users', 'wp_crm_persons', 'wp_crm_persons');
	add_submenu_page ('wp_crm', 'WP Events', 'WP Events', 'create_users', 'wp_crm_product_events', 'wp_crm_product_events');
	add_submenu_page ('wp_crm', 'WP Resources', 'WP Resources', 'create_users', 'wp_crm_product_resources', 'wp_crm_product_resources');
	add_submenu_page ('wp_crm', 'WP Companies', 'WP Companies', 'create_users', 'wp_crm_companies', 'wp_crm_companies');
	add_submenu_page ('wp_crm', 'WP Participants', 'WP Participants *', 'create_users', 'wp_crm_participants', 'wp_crm_participants');
	add_submenu_page ('wp_crm', 'WP History', 'WP History', 'create_users', 'wp_crm_history', 'wp_crm_history');
	add_submenu_page ('wp_crm', 'WP Efficiency', 'WP Efficiency', 'create_users', 'wp_crm_efficiency', 'wp_crm_efficiency');
	add_submenu_page ('wp_crm', 'WP Mail Templates', 'WP Mail Templates', 'create_users', 'wp_crm_mail_templates', 'wp_crm_mail_templates');
	add_submenu_page ('wp_crm', 'WP File Templates', 'WP File Template', 'create_users', 'wp_crm_config', 'wp_crm_config');
	}

function wp_crm_admin_bar () {
	global $wp_admin_bar;
	if (current_user_can('create_users')) {
		$wp_admin_bar->add_menu ( array (
			'parent' => false,
			'id' => 'wp_crm',
			'title' => 'WP CRM',
			'href' => admin_url ('admin.php?page=wp_crm'),
			'meta' => false,
			));
		$wp_admin_bar->add_menu ( array (
			'parent' => false,
			'id' => 'wp_crm_tm',
			'title' => 'WP TIME',
			'href' => '',
			'meta' => false,
			));
		}
	}

add_action ('init', 'wp_crm_cookie');
add_action ('wp_before_admin_bar_render', 'wp_crm_admin_bar');
add_filter ('the_content', 'wp_crm_shop_filter');
add_filter ('the_content', 'wp_crm_gallery_filter');
add_action ('wp_enqueue_scripts', 'wp_crm_shop_scripts');
add_action ('wp_dashboard_setup', 'wp_crm_dashboard_widget'); 
add_action ('wp_head', 'wp_crm_customer_log');
add_action ('admin_enqueue_scripts', 'wp_crm_admin_scripts');
add_action ('admin_menu', 'wp_crm_admin_menu');
?>
